{
  "contractName": "highway",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract RPDToken",
          "name": "token_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "create_ramp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "use_ramp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "check_allowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pay_ramp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract RPDToken\",\"name\":\"token_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"check_allowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"create_ramp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pay_ramp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"use_ramp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"check_allowance()\":{\"returns\":{\"_0\":\"if the user has enough RPD TOKEN to use highway\"}},\"create_ramp(string,string,uint256)\":{\"params\":{\"location\":\"of the ramp which will be created\",\"name\":\"of the ramp which will be created\",\"price\":\"of the ramp which will be created\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"use_ramp(string)\":{\"params\":{\"name\":\"of the ramp to use\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"check_allowance()\":{\"notice\":\"Check allowance from user\"},\"create_ramp(string,string,uint256)\":{\"notice\":\"Calculate the cost of a determinate ramp\"},\"pay_ramp()\":{\"notice\":\"function to pay ramps after calculate cost and check if the driver has 10 rpd tokens.\"},\"use_ramp(string)\":{\"notice\":\"Check allowance from user\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/rpd_highway.sol\":\"highway\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/rpd_highway.sol\":{\"keccak256\":\"0x85b12cd67db8c84e9fd34ed2408216f4ba21e0e45e6d4b61fc9d625f81371cfc\",\"license\":\"NONE\",\"urls\":[\"bzz-raw://e10317bf1746beb8827cdf8d071cdafcdad7c40d4a43f16b35a155603c3cfb93\",\"dweb:/ipfs/QmTb4eh8JFuMcAxNJxCkwjqwFbUVoLGEzmX8GLj8PtraMs\"]},\"project:/contracts/rpd_interface.sol\":{\"keccak256\":\"0x61a814fbe492adce97fa19947fee81282f1c58a0e90cf5f18e9abef859240c5e\",\"license\":\"NONE\",\"urls\":[\"bzz-raw://ce645bae8d8d4cb321397f68bdd623e3fb015354adce6a8709c35d460fbec923\",\"dweb:/ipfs/Qmbpo9gmFhotXF7ZKAMhQwx5gW92j1oihBvgH1VoGC3i69\"]},\"project:/contracts/rpd_token.sol\":{\"keccak256\":\"0xd27b53cc8178d8bfd66c5df72b290ee9b89744d94ca59a169b4b1172ce5e43cd\",\"license\":\"NONE\",\"urls\":[\"bzz-raw://586b18e5e892c993cdfec14c7213ef47c8e953250e9ee858dbc28fdc2328c9a9\",\"dweb:/ipfs/QmNxWdQczDwKaU7vU7TGdAMngH5bruc9g65DK2DDnzvXZk\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620019f9380380620019f9833981810160405281019062000037919062000203565b620000576200004b620000b960201b60201c565b620000c160201b60201c565b60008060146101000a81548160ff02191690831515021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000235565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001b7826200018a565b9050919050565b6000620001cb82620001aa565b9050919050565b620001dd81620001be565b8114620001e957600080fd5b50565b600081519050620001fd81620001d2565b92915050565b6000602082840312156200021c576200021b62000185565b5b60006200022c84828501620001ec565b91505092915050565b6117b480620002456000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ef578063b1263b7f1461010d578063cd5a394214610129578063f2fde38b1461013357610088565b80634ddd15d51461008d5780635c975abb146100ab578063663868aa146100c9578063715018a6146100e5575b600080fd5b61009561014f565b6040516100a29190610e6b565b60405180910390f35b6100b3610379565b6040516100c09190610e6b565b60405180910390f35b6100e360048036038101906100de9190610fe0565b61038f565b005b6100ed61065e565b005b6100f76106e6565b604051610104919061106a565b60405180910390f35b610127600480360381019061012291906110bb565b61070f565b005b6101316108db565b005b61014d60048036038101906101489190611172565b610b5c565b005b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d9906111fc565b60405180910390fd5b6101ea610379565b1561022a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022190611268565b60405180910390fd5b600a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610287919061106a565b602060405180830381865afa1580156102a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c8919061129d565b101580156103745750600a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016103309291906112ca565b602060405180830381865afa15801561034d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610371919061129d565b10155b905090565b60008060149054906101000a900460ff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610421576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610418906111fc565b60405180910390fd5b610429610379565b15610469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046090611268565b60405180910390fd5b61047161014f565b6104b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a790611365565b60405180910390fd5b60006003826040516104c291906113ff565b908152602001604051809103902060000180546104de90611445565b905011610520576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610517906114c3565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805461056f90611445565b9050146105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a890611555565b60405180910390fd5b6003816040516105c191906113ff565b9081526020016040518091039020600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082018160000190805461062290611445565b61062d929190610d20565b50600182018160010190805461064290611445565b61064d929190610d20565b506002820154816002015590505050565b610666610c54565b73ffffffffffffffffffffffffffffffffffffffff166106846106e6565b73ffffffffffffffffffffffffffffffffffffffff16146106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d1906115c1565b60405180910390fd5b6106e46000610c5c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610717610c54565b73ffffffffffffffffffffffffffffffffffffffff166107356106e6565b73ffffffffffffffffffffffffffffffffffffffff161461078b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610782906115c1565b60405180910390fd5b610793610379565b156107d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ca90611268565b60405180910390fd5b60006003846040516107e591906113ff565b9081526020016040518091039020600001805461080190611445565b90501115610844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083b9061162d565b60405180910390fd5b8260038460405161085591906113ff565b90815260200160405180910390206000019080519060200190610879929190610dad565b508160038460405161088b91906113ff565b908152602001604051809103902060010190805190602001906108af929190610dad565b50806003846040516108c191906113ff565b908152602001604051809103902060020181905550505050565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561096d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610964906111fc565b60405180910390fd5b610975610379565b156109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac90611268565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546040518463ffffffff1660e01b8152600401610a569392919061165c565b6020604051808303816000875af1158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9991906116bf565b5060405180606001604052806040518060200160405280600081525081526020016040518060200160405280600081525081526020016000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610b2f929190610dad565b506020820151816001019080519060200190610b4c929190610dad565b5060408201518160020155905050565b610b64610c54565b73ffffffffffffffffffffffffffffffffffffffff16610b826106e6565b73ffffffffffffffffffffffffffffffffffffffff1614610bd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcf906115c1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3f9061175e565b60405180910390fd5b610c5181610c5c565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054610d2c90611445565b90600052602060002090601f016020900481019282610d4e5760008555610d9c565b82601f10610d5f5780548555610d9c565b82800160010185558215610d9c57600052602060002091601f016020900482015b82811115610d9b578254825591600101919060010190610d80565b5b509050610da99190610e33565b5090565b828054610db990611445565b90600052602060002090601f016020900481019282610ddb5760008555610e22565b82601f10610df457805160ff1916838001178555610e22565b82800160010185558215610e22579182015b82811115610e21578251825591602001919060010190610e06565b5b509050610e2f9190610e33565b5090565b5b80821115610e4c576000816000905550600101610e34565b5090565b60008115159050919050565b610e6581610e50565b82525050565b6000602082019050610e806000830184610e5c565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610eed82610ea4565b810181811067ffffffffffffffff82111715610f0c57610f0b610eb5565b5b80604052505050565b6000610f1f610e86565b9050610f2b8282610ee4565b919050565b600067ffffffffffffffff821115610f4b57610f4a610eb5565b5b610f5482610ea4565b9050602081019050919050565b82818337600083830152505050565b6000610f83610f7e84610f30565b610f15565b905082815260208101848484011115610f9f57610f9e610e9f565b5b610faa848285610f61565b509392505050565b600082601f830112610fc757610fc6610e9a565b5b8135610fd7848260208601610f70565b91505092915050565b600060208284031215610ff657610ff5610e90565b5b600082013567ffffffffffffffff81111561101457611013610e95565b5b61102084828501610fb2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061105482611029565b9050919050565b61106481611049565b82525050565b600060208201905061107f600083018461105b565b92915050565b6000819050919050565b61109881611085565b81146110a357600080fd5b50565b6000813590506110b58161108f565b92915050565b6000806000606084860312156110d4576110d3610e90565b5b600084013567ffffffffffffffff8111156110f2576110f1610e95565b5b6110fe86828701610fb2565b935050602084013567ffffffffffffffff81111561111f5761111e610e95565b5b61112b86828701610fb2565b925050604061113c868287016110a6565b9150509250925092565b61114f81611049565b811461115a57600080fd5b50565b60008135905061116c81611146565b92915050565b60006020828403121561118857611187610e90565b5b60006111968482850161115d565b91505092915050565b600082825260208201905092915050565b7f506c656173652073657420636f727265637420746f6b656e2061646472657373600082015250565b60006111e660208361119f565b91506111f1826111b0565b602082019050919050565b60006020820190508181036000830152611215816111d9565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b600061125260108361119f565b915061125d8261121c565b602082019050919050565b6000602082019050818103600083015261128181611245565b9050919050565b6000815190506112978161108f565b92915050565b6000602082840312156112b3576112b2610e90565b5b60006112c184828501611288565b91505092915050565b60006040820190506112df600083018561105b565b6112ec602083018461105b565b9392505050565b7f504c4541534520434845434b20594f55522042414c414e4345204f5220414c4c60008201527f4f57414e43452e00000000000000000000000000000000000000000000000000602082015250565b600061134f60278361119f565b915061135a826112f3565b604082019050919050565b6000602082019050818103600083015261137e81611342565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156113b957808201518184015260208101905061139e565b838111156113c8576000848401525b50505050565b60006113d982611385565b6113e38185611390565b93506113f381856020860161139b565b80840191505092915050565b600061140b82846113ce565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061145d57607f821691505b6020821081141561147157611470611416565b5b50919050565b7f52414d5020444f45534e27542045584953545300000000000000000000000000600082015250565b60006114ad60138361119f565b91506114b882611477565b602082019050919050565b600060208201905081810360008301526114dc816114a0565b9050919050565b7f414c5245414459205553494e4720412052414d502c2046494e4953482049542060008201527f414e442050415920495420544f2055534520414e4f544845522e000000000000602082015250565b600061153f603a8361119f565b915061154a826114e3565b604082019050919050565b6000602082019050818103600083015261156e81611532565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006115ab60208361119f565b91506115b682611575565b602082019050919050565b600060208201905081810360008301526115da8161159e565b9050919050565b7f52414d5020414c52454144592045584953545300000000000000000000000000600082015250565b600061161760138361119f565b9150611622826115e1565b602082019050919050565b600060208201905081810360008301526116468161160a565b9050919050565b61165681611085565b82525050565b6000606082019050611671600083018661105b565b61167e602083018561105b565b61168b604083018461164d565b949350505050565b61169c81610e50565b81146116a757600080fd5b50565b6000815190506116b981611693565b92915050565b6000602082840312156116d5576116d4610e90565b5b60006116e3848285016116aa565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061174860268361119f565b9150611753826116ec565b604082019050919050565b600060208201905081810360008301526117778161173b565b905091905056fea2646970667358221220d082cac83657fff00b19aaedcd22731830cf60532e196a0e3a194a8b4074b50564736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ef578063b1263b7f1461010d578063cd5a394214610129578063f2fde38b1461013357610088565b80634ddd15d51461008d5780635c975abb146100ab578063663868aa146100c9578063715018a6146100e5575b600080fd5b61009561014f565b6040516100a29190610e6b565b60405180910390f35b6100b3610379565b6040516100c09190610e6b565b60405180910390f35b6100e360048036038101906100de9190610fe0565b61038f565b005b6100ed61065e565b005b6100f76106e6565b604051610104919061106a565b60405180910390f35b610127600480360381019061012291906110bb565b61070f565b005b6101316108db565b005b61014d60048036038101906101489190611172565b610b5c565b005b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d9906111fc565b60405180910390fd5b6101ea610379565b1561022a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022190611268565b60405180910390fd5b600a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610287919061106a565b602060405180830381865afa1580156102a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c8919061129d565b101580156103745750600a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016103309291906112ca565b602060405180830381865afa15801561034d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610371919061129d565b10155b905090565b60008060149054906101000a900460ff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610421576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610418906111fc565b60405180910390fd5b610429610379565b15610469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046090611268565b60405180910390fd5b61047161014f565b6104b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a790611365565b60405180910390fd5b60006003826040516104c291906113ff565b908152602001604051809103902060000180546104de90611445565b905011610520576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610517906114c3565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805461056f90611445565b9050146105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a890611555565b60405180910390fd5b6003816040516105c191906113ff565b9081526020016040518091039020600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082018160000190805461062290611445565b61062d929190610d20565b50600182018160010190805461064290611445565b61064d929190610d20565b506002820154816002015590505050565b610666610c54565b73ffffffffffffffffffffffffffffffffffffffff166106846106e6565b73ffffffffffffffffffffffffffffffffffffffff16146106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d1906115c1565b60405180910390fd5b6106e46000610c5c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610717610c54565b73ffffffffffffffffffffffffffffffffffffffff166107356106e6565b73ffffffffffffffffffffffffffffffffffffffff161461078b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610782906115c1565b60405180910390fd5b610793610379565b156107d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ca90611268565b60405180910390fd5b60006003846040516107e591906113ff565b9081526020016040518091039020600001805461080190611445565b90501115610844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083b9061162d565b60405180910390fd5b8260038460405161085591906113ff565b90815260200160405180910390206000019080519060200190610879929190610dad565b508160038460405161088b91906113ff565b908152602001604051809103902060010190805190602001906108af929190610dad565b50806003846040516108c191906113ff565b908152602001604051809103902060020181905550505050565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561096d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610964906111fc565b60405180910390fd5b610975610379565b156109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac90611268565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546040518463ffffffff1660e01b8152600401610a569392919061165c565b6020604051808303816000875af1158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9991906116bf565b5060405180606001604052806040518060200160405280600081525081526020016040518060200160405280600081525081526020016000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610b2f929190610dad565b506020820151816001019080519060200190610b4c929190610dad565b5060408201518160020155905050565b610b64610c54565b73ffffffffffffffffffffffffffffffffffffffff16610b826106e6565b73ffffffffffffffffffffffffffffffffffffffff1614610bd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcf906115c1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3f9061175e565b60405180910390fd5b610c5181610c5c565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054610d2c90611445565b90600052602060002090601f016020900481019282610d4e5760008555610d9c565b82601f10610d5f5780548555610d9c565b82800160010185558215610d9c57600052602060002091601f016020900482015b82811115610d9b578254825591600101919060010190610d80565b5b509050610da99190610e33565b5090565b828054610db990611445565b90600052602060002090601f016020900481019282610ddb5760008555610e22565b82601f10610df457805160ff1916838001178555610e22565b82800160010185558215610e22579182015b82811115610e21578251825591602001919060010190610e06565b5b509050610e2f9190610e33565b5090565b5b80821115610e4c576000816000905550600101610e34565b5090565b60008115159050919050565b610e6581610e50565b82525050565b6000602082019050610e806000830184610e5c565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610eed82610ea4565b810181811067ffffffffffffffff82111715610f0c57610f0b610eb5565b5b80604052505050565b6000610f1f610e86565b9050610f2b8282610ee4565b919050565b600067ffffffffffffffff821115610f4b57610f4a610eb5565b5b610f5482610ea4565b9050602081019050919050565b82818337600083830152505050565b6000610f83610f7e84610f30565b610f15565b905082815260208101848484011115610f9f57610f9e610e9f565b5b610faa848285610f61565b509392505050565b600082601f830112610fc757610fc6610e9a565b5b8135610fd7848260208601610f70565b91505092915050565b600060208284031215610ff657610ff5610e90565b5b600082013567ffffffffffffffff81111561101457611013610e95565b5b61102084828501610fb2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061105482611029565b9050919050565b61106481611049565b82525050565b600060208201905061107f600083018461105b565b92915050565b6000819050919050565b61109881611085565b81146110a357600080fd5b50565b6000813590506110b58161108f565b92915050565b6000806000606084860312156110d4576110d3610e90565b5b600084013567ffffffffffffffff8111156110f2576110f1610e95565b5b6110fe86828701610fb2565b935050602084013567ffffffffffffffff81111561111f5761111e610e95565b5b61112b86828701610fb2565b925050604061113c868287016110a6565b9150509250925092565b61114f81611049565b811461115a57600080fd5b50565b60008135905061116c81611146565b92915050565b60006020828403121561118857611187610e90565b5b60006111968482850161115d565b91505092915050565b600082825260208201905092915050565b7f506c656173652073657420636f727265637420746f6b656e2061646472657373600082015250565b60006111e660208361119f565b91506111f1826111b0565b602082019050919050565b60006020820190508181036000830152611215816111d9565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b600061125260108361119f565b915061125d8261121c565b602082019050919050565b6000602082019050818103600083015261128181611245565b9050919050565b6000815190506112978161108f565b92915050565b6000602082840312156112b3576112b2610e90565b5b60006112c184828501611288565b91505092915050565b60006040820190506112df600083018561105b565b6112ec602083018461105b565b9392505050565b7f504c4541534520434845434b20594f55522042414c414e4345204f5220414c4c60008201527f4f57414e43452e00000000000000000000000000000000000000000000000000602082015250565b600061134f60278361119f565b915061135a826112f3565b604082019050919050565b6000602082019050818103600083015261137e81611342565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156113b957808201518184015260208101905061139e565b838111156113c8576000848401525b50505050565b60006113d982611385565b6113e38185611390565b93506113f381856020860161139b565b80840191505092915050565b600061140b82846113ce565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061145d57607f821691505b6020821081141561147157611470611416565b5b50919050565b7f52414d5020444f45534e27542045584953545300000000000000000000000000600082015250565b60006114ad60138361119f565b91506114b882611477565b602082019050919050565b600060208201905081810360008301526114dc816114a0565b9050919050565b7f414c5245414459205553494e4720412052414d502c2046494e4953482049542060008201527f414e442050415920495420544f2055534520414e4f544845522e000000000000602082015250565b600061153f603a8361119f565b915061154a826114e3565b604082019050919050565b6000602082019050818103600083015261156e81611532565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006115ab60208361119f565b91506115b682611575565b602082019050919050565b600060208201905081810360008301526115da8161159e565b9050919050565b7f52414d5020414c52454144592045584953545300000000000000000000000000600082015250565b600061161760138361119f565b9150611622826115e1565b602082019050919050565b600060208201905081810360008301526116468161160a565b9050919050565b61165681611085565b82525050565b6000606082019050611671600083018661105b565b61167e602083018561105b565b61168b604083018461164d565b949350505050565b61169c81610e50565b81146116a757600080fd5b50565b6000815190506116b981611693565b92915050565b6000602082840312156116d5576116d4610e90565b5b60006116e3848285016116aa565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061174860268361119f565b9150611753826116ec565b604082019050919050565b600060208201905081810360008301526117778161173b565b905091905056fea2646970667358221220d082cac83657fff00b19aaedcd22731830cf60532e196a0e3a194a8b4074b50564736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1420:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:11",
                "type": ""
              }
            ],
            "src": "7:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:11",
                "type": ""
              }
            ],
            "src": "334:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:11",
                "type": ""
              }
            ],
            "src": "466:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "630:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "640:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "669:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "651:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "651:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "640:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_RPDToken_$1289",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "612:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "622:7:11",
                "type": ""
              }
            ],
            "src": "568:113:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "747:96:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "821:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "830:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "833:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "823:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "823:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "823:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "770:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "812:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_RPDToken_$1289",
                              "nodeType": "YulIdentifier",
                              "src": "777:34:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "777:41:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "767:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "767:52:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "760:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "760:60:11"
                  },
                  "nodeType": "YulIf",
                  "src": "757:80:11"
                }
              ]
            },
            "name": "validator_revert_t_contract$_RPDToken_$1289",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "740:5:11",
                "type": ""
              }
            ],
            "src": "687:156:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "929:97:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "939:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "954:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "948:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "948:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "939:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1014:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_RPDToken_$1289",
                      "nodeType": "YulIdentifier",
                      "src": "970:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "970:50:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "970:50:11"
                }
              ]
            },
            "name": "abi_decode_t_contract$_RPDToken_$1289_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "907:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "915:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "923:5:11",
                "type": ""
              }
            ],
            "src": "849:177:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1126:291:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1172:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1174:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1174:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1174:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1147:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1156:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1143:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1143:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1168:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1139:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1139:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1136:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1265:145:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1280:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1294:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1284:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1309:91:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1372:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1383:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1368:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1368:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1392:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_RPDToken_$1289_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1319:48:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1319:81:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1309:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_RPDToken_$1289_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1096:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1107:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1119:6:11",
                "type": ""
              }
            ],
            "src": "1032:385:11"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_RPDToken_$1289(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_RPDToken_$1289(value) {\n        if iszero(eq(value, cleanup_t_contract$_RPDToken_$1289(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_RPDToken_$1289_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_RPDToken_$1289(value)\n    }\n\n    function abi_decode_tuple_t_contract$_RPDToken_$1289_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_RPDToken_$1289_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:17965:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "49:48:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "59:32:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "84:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "77:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "77:13:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "70:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "70:21:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "59:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "41:7:11",
                "type": ""
              }
            ],
            "src": "7:90:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "162:50:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "179:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "199:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "184:14:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "184:21:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "172:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "172:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "172:34:11"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "150:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "157:3:11",
                "type": ""
              }
            ],
            "src": "103:109:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "310:118:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "320:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "332:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "320:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "356:37:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:65:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "356:65:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "282:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "294:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "305:4:11",
                "type": ""
              }
            ],
            "src": "218:210:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "474:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "484:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "500:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "494:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "484:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "467:6:11",
                "type": ""
              }
            ],
            "src": "434:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "604:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "621:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "614:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "614:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "515:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "727:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "744:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "747:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "737:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "737:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "737:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "638:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "850:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "867:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "870:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "860:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "860:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "860:12:11"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "761:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "973:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "990:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "993:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "983:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "983:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "983:12:11"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "884:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1055:54:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1065:38:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1083:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1090:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1079:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1079:14:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1099:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1095:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1095:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1075:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1075:28:11"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "1065:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1038:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "1048:6:11",
                "type": ""
              }
            ],
            "src": "1007:102:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1143:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1160:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1163:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1153:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1153:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1153:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1257:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1260:4:11",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1250:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1250:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1250:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1281:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1284:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1274:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1274:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1274:15:11"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1115:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1344:238:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1354:58:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1376:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "1406:4:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1384:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1384:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1372:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1372:40:11"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1358:10:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1523:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1525:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1525:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1525:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1466:10:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1478:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1463:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1463:34:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1502:10:11"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1514:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1499:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1499:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1460:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1460:62:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1457:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1561:2:11",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1565:10:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1554:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1554:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1554:22:11"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1330:6:11",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1338:4:11",
                "type": ""
              }
            ],
            "src": "1301:281:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1629:88:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1639:30:11",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "1649:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1649:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1639:6:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1698:6:11"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1706:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "1678:19:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1678:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1678:33:11"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1613:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1622:6:11",
                "type": ""
              }
            ],
            "src": "1588:129:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1790:241:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1895:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1897:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1897:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1897:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1867:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1875:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1864:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1864:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1861:56:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1927:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1957:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "1935:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1935:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1927:4:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2001:23:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "2013:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2019:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2009:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2009:15:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "2001:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1774:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1785:4:11",
                "type": ""
              }
            ],
            "src": "1723:308:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2088:103:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "2111:3:11"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "2116:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2121:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2098:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2098:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2098:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "2169:3:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2174:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2165:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2165:16:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2183:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2158:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2158:27:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2158:27:11"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2070:3:11",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2075:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2080:6:11",
                "type": ""
              }
            ],
            "src": "2037:154:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2281:328:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2291:75:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2358:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2316:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2316:49:11"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2300:15:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2300:66:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2291:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2382:5:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2389:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2375:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2375:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2375:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2405:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2420:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2427:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2416:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2416:16:11"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "2409:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2470:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "2472:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2472:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2472:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "2451:3:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2456:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2447:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2447:16:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2465:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2444:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2444:25:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2441:112:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "2586:3:11"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "2591:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2596:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2562:23:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2562:41:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2562:41:11"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2254:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2259:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2267:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2275:5:11",
                "type": ""
              }
            ],
            "src": "2197:412:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2691:278:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2740:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "2742:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2742:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2742:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2719:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2727:4:11",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2715:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2715:17:11"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2734:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2711:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2711:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2704:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2704:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2701:122:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2832:34:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2859:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2846:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2846:20:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2836:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2875:88:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2936:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2944:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2932:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2932:17:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2951:6:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2959:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2884:47:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2884:79:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2875:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2669:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2677:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2685:5:11",
                "type": ""
              }
            ],
            "src": "2629:340:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3051:433:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3097:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3099:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3099:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3099:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3072:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3081:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3068:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3068:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3093:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3064:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3064:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3061:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3190:287:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3205:45:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3236:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3247:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3232:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3232:17:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3219:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3219:31:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3209:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3297:83:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "3299:77:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3299:79:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3299:79:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3269:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3277:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3266:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3266:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "3263:117:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3394:73:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3439:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3450:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3435:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3435:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3459:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3404:30:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3404:63:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3394:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3021:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3032:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3044:6:11",
                "type": ""
              }
            ],
            "src": "2975:509:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3535:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3545:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3560:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3567:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3556:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3556:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3545:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3517:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3527:7:11",
                "type": ""
              }
            ],
            "src": "3490:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3667:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3677:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3706:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3688:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3688:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3677:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3649:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3659:7:11",
                "type": ""
              }
            ],
            "src": "3622:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3789:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3806:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3829:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3811:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3811:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3799:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3799:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3799:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3777:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3784:3:11",
                "type": ""
              }
            ],
            "src": "3724:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3946:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3956:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3968:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3979:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3964:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3964:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3956:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4036:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4049:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4060:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4045:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4045:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3992:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3992:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3992:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3918:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3930:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3941:4:11",
                "type": ""
              }
            ],
            "src": "3848:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4121:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4131:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4142:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4131:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4103:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4113:7:11",
                "type": ""
              }
            ],
            "src": "4076:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4202:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4259:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4268:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4271:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4261:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4261:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4261:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4225:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4250:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "4232:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4232:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4222:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4222:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4215:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4215:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "4212:63:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4195:5:11",
                "type": ""
              }
            ],
            "src": "4159:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4339:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4349:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4371:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4358:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4358:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4349:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4414:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4387:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4387:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4387:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4317:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4325:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4333:5:11",
                "type": ""
              }
            ],
            "src": "4287:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4552:859:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4598:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4600:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4600:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4600:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4573:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4582:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4569:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4569:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4594:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4565:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4565:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "4562:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4691:287:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4706:45:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4737:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4748:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4733:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4733:17:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4720:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4720:31:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4710:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4798:83:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "4800:77:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4800:79:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4800:79:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4770:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4778:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4767:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4767:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "4764:117:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4895:73:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4940:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4951:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4936:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4936:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4960:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "4905:30:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4905:63:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4895:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4988:288:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5003:46:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5034:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5045:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5030:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5030:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5017:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5017:32:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5007:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5096:83:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "5098:77:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5098:79:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5098:79:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5068:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5076:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5065:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5065:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "5062:117:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5193:73:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5238:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5249:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5234:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5234:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5258:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "5203:30:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5203:63:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5193:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5286:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5301:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5315:2:11",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5305:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5331:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5366:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5377:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5362:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5362:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5386:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5341:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5341:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5331:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4506:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4517:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4529:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4537:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4545:6:11",
                "type": ""
              }
            ],
            "src": "4432:979:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5460:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5517:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5526:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5529:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5519:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5519:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5519:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5483:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5508:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "5490:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5490:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5480:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5480:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5473:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5473:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5470:63:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5453:5:11",
                "type": ""
              }
            ],
            "src": "5417:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5597:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5607:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5629:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5616:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5616:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5607:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5672:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "5645:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5645:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5645:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5575:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5583:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5591:5:11",
                "type": ""
              }
            ],
            "src": "5545:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5756:263:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5802:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5804:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5804:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5804:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5777:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5786:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5773:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5773:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5798:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5769:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5769:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5766:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5895:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5910:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5924:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5914:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5939:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5974:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5985:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5970:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5970:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5994:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5949:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5949:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5939:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5726:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5737:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5749:6:11",
                "type": ""
              }
            ],
            "src": "5690:329:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6121:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6138:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6143:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6131:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6131:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6131:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6159:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6178:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6183:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6174:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6174:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6159:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6093:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6098:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6109:11:11",
                "type": ""
              }
            ],
            "src": "6025:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6306:76:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6328:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6336:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6324:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6324:14:11"
                      },
                      {
                        "hexValue": "506c656173652073657420636f727265637420746f6b656e2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6340:34:11",
                        "type": "",
                        "value": "Please set correct token address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6317:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6317:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6317:58:11"
                }
              ]
            },
            "name": "store_literal_in_memory_c243c659333ad27407f563fc91c5fa7616c233b808cb99600dcda8fb37709b1a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6298:6:11",
                "type": ""
              }
            ],
            "src": "6200:182:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6534:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6544:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6610:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6615:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6551:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6551:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6544:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6716:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c243c659333ad27407f563fc91c5fa7616c233b808cb99600dcda8fb37709b1a",
                      "nodeType": "YulIdentifier",
                      "src": "6627:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6627:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6627:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6729:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6740:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6745:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6736:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6736:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6729:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c243c659333ad27407f563fc91c5fa7616c233b808cb99600dcda8fb37709b1a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6522:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6530:3:11",
                "type": ""
              }
            ],
            "src": "6388:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6931:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6941:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6953:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6964:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6949:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6949:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6941:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6988:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6999:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6984:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6984:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7007:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7013:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7003:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7003:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6977:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6977:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6977:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7033:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7167:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c243c659333ad27407f563fc91c5fa7616c233b808cb99600dcda8fb37709b1a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7041:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7041:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7033:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c243c659333ad27407f563fc91c5fa7616c233b808cb99600dcda8fb37709b1a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6911:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6926:4:11",
                "type": ""
              }
            ],
            "src": "6760:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7291:60:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7313:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7321:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7309:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7309:14:11"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7325:18:11",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7302:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7302:42:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7302:42:11"
                }
              ]
            },
            "name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7283:6:11",
                "type": ""
              }
            ],
            "src": "7185:166:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7503:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7513:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7579:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7584:2:11",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7520:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7520:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7513:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7685:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                      "nodeType": "YulIdentifier",
                      "src": "7596:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7596:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7596:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7698:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7709:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7714:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7705:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7705:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7698:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7491:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7499:3:11",
                "type": ""
              }
            ],
            "src": "7357:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7900:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7910:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7922:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7933:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7918:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7918:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7910:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7957:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7968:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7953:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7953:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7976:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7982:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7972:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7972:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7946:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7946:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7946:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8002:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8136:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8010:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8010:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8002:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7880:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7895:4:11",
                "type": ""
              }
            ],
            "src": "7729:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8217:80:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8227:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8242:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8236:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8236:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8227:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8285:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8258:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8258:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8258:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8195:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8203:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8211:5:11",
                "type": ""
              }
            ],
            "src": "8154:143:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8380:274:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8426:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "8428:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8428:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8428:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8401:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8410:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8397:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8397:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8422:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8393:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8393:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8390:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8519:128:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8534:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8548:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8538:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8563:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8609:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8620:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8605:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8605:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8629:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "8573:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8573:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8563:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8350:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8361:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8373:6:11",
                "type": ""
              }
            ],
            "src": "8303:351:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8786:206:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8796:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8808:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8819:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8804:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8804:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8796:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8876:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8889:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8900:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8885:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8885:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8832:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8832:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8832:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8957:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8970:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8981:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8966:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8966:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8913:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8913:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8913:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8750:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8762:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8770:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8781:4:11",
                "type": ""
              }
            ],
            "src": "8660:332:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9104:120:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9126:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9134:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9122:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9122:14:11"
                      },
                      {
                        "hexValue": "504c4541534520434845434b20594f55522042414c414e4345204f5220414c4c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9138:34:11",
                        "type": "",
                        "value": "PLEASE CHECK YOUR BALANCE OR ALL"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9115:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9115:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9115:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9194:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9202:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9190:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9190:15:11"
                      },
                      {
                        "hexValue": "4f57414e43452e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9207:9:11",
                        "type": "",
                        "value": "OWANCE."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9183:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9183:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9183:34:11"
                }
              ]
            },
            "name": "store_literal_in_memory_d56f5e20a62399d961eebab8cec2d2e0d80f81db90c4ab26886aaccdced6df45",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9096:6:11",
                "type": ""
              }
            ],
            "src": "8998:226:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9376:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9386:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9452:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9457:2:11",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9393:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9393:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9386:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9558:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d56f5e20a62399d961eebab8cec2d2e0d80f81db90c4ab26886aaccdced6df45",
                      "nodeType": "YulIdentifier",
                      "src": "9469:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9469:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9469:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9571:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9582:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9587:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9578:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9578:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9571:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d56f5e20a62399d961eebab8cec2d2e0d80f81db90c4ab26886aaccdced6df45_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9364:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9372:3:11",
                "type": ""
              }
            ],
            "src": "9230:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9773:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9783:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9795:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9806:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9791:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9791:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9783:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9830:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9841:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9826:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9826:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9849:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9855:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9845:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9845:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9819:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9819:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9819:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9875:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10009:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d56f5e20a62399d961eebab8cec2d2e0d80f81db90c4ab26886aaccdced6df45_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9883:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9883:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9875:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d56f5e20a62399d961eebab8cec2d2e0d80f81db90c4ab26886aaccdced6df45__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9753:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9768:4:11",
                "type": ""
              }
            ],
            "src": "9602:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10086:40:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10097:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10113:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10107:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10107:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "10097:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10069:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10079:6:11",
                "type": ""
              }
            ],
            "src": "10027:99:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10246:34:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10256:18:11",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "10271:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10256:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10218:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10223:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "10234:11:11",
                "type": ""
              }
            ],
            "src": "10132:148:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10335:258:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10345:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10354:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "10349:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10414:63:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10439:3:11"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10444:1:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10435:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10435:11:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "10458:3:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "10463:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10454:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10454:11:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "10448:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10448:18:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10428:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10428:39:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10428:39:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10375:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10378:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10372:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10372:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10386:19:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10388:15:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10397:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10400:2:11",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10393:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10393:10:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10388:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10368:3:11",
                    "statements": []
                  },
                  "src": "10364:113:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10511:76:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10561:3:11"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10566:6:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10557:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10557:16:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10575:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10550:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10550:27:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10550:27:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10492:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10495:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10489:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10489:13:11"
                  },
                  "nodeType": "YulIf",
                  "src": "10486:101:11"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "10317:3:11",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "10322:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10327:6:11",
                "type": ""
              }
            ],
            "src": "10286:307:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10709:267:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10719:53:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10766:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "10733:32:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10733:39:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10723:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10781:96:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10865:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10870:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10788:76:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10788:89:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10781:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10912:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10919:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10908:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10908:16:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10926:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10931:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "10886:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10886:52:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10886:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10947:23:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10958:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10963:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10954:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10954:16:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10947:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10690:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10697:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10705:3:11",
                "type": ""
              }
            ],
            "src": "10599:377:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11118:139:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11129:102:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11218:6:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11227:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11136:81:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11136:95:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11129:3:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11241:10:11",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "11248:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11241:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11097:3:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11103:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11114:3:11",
                "type": ""
              }
            ],
            "src": "10982:275:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11291:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11308:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11311:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11301:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11301:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11301:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11405:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11408:4:11",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11398:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11398:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11398:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11429:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11432:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11422:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11422:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11422:15:11"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "11263:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11500:269:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11510:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "11524:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11530:1:11",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "11520:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11520:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "11510:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11541:38:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "11571:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11577:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11567:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11567:12:11"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "11545:18:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11618:51:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11632:27:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "11646:6:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11654:4:11",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "11642:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11642:17:11"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11632:6:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "11598:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11591:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11591:26:11"
                  },
                  "nodeType": "YulIf",
                  "src": "11588:81:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11721:42:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "11735:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11735:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11735:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "11685:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11708:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11716:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "11705:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11705:14:11"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "11682:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11682:38:11"
                  },
                  "nodeType": "YulIf",
                  "src": "11679:84:11"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "11484:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11493:6:11",
                "type": ""
              }
            ],
            "src": "11449:320:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11881:63:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11903:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11911:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11899:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11899:14:11"
                      },
                      {
                        "hexValue": "52414d5020444f45534e275420455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11915:21:11",
                        "type": "",
                        "value": "RAMP DOESN'T EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11892:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11892:45:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11892:45:11"
                }
              ]
            },
            "name": "store_literal_in_memory_3c947fe6e32408035f7aa08fa6bda107361ba0679334e064d1d3da1f846c15d2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11873:6:11",
                "type": ""
              }
            ],
            "src": "11775:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12096:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12106:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12172:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12177:2:11",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12113:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12113:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12106:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12278:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3c947fe6e32408035f7aa08fa6bda107361ba0679334e064d1d3da1f846c15d2",
                      "nodeType": "YulIdentifier",
                      "src": "12189:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12189:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12189:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12291:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12302:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12307:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12298:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12298:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12291:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3c947fe6e32408035f7aa08fa6bda107361ba0679334e064d1d3da1f846c15d2_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12084:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12092:3:11",
                "type": ""
              }
            ],
            "src": "11950:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12493:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12503:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12515:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12526:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12511:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12511:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12503:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12550:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12561:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12546:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12546:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12569:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12575:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12565:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12565:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12539:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12539:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12539:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12595:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12729:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3c947fe6e32408035f7aa08fa6bda107361ba0679334e064d1d3da1f846c15d2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12603:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12603:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12595:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3c947fe6e32408035f7aa08fa6bda107361ba0679334e064d1d3da1f846c15d2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12473:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12488:4:11",
                "type": ""
              }
            ],
            "src": "12322:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12853:139:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12875:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12883:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12871:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12871:14:11"
                      },
                      {
                        "hexValue": "414c5245414459205553494e4720412052414d502c2046494e49534820495420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12887:34:11",
                        "type": "",
                        "value": "ALREADY USING A RAMP, FINISH IT "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12864:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12864:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12864:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12943:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12951:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12939:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12939:15:11"
                      },
                      {
                        "hexValue": "414e442050415920495420544f2055534520414e4f544845522e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12956:28:11",
                        "type": "",
                        "value": "AND PAY IT TO USE ANOTHER."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12932:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12932:53:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12932:53:11"
                }
              ]
            },
            "name": "store_literal_in_memory_3891c7f729786a7a8e966fb307051383dc40a735bce926cc46bbc261e66cae89",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12845:6:11",
                "type": ""
              }
            ],
            "src": "12747:245:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13144:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13154:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13220:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13225:2:11",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13161:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13161:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13154:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13326:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3891c7f729786a7a8e966fb307051383dc40a735bce926cc46bbc261e66cae89",
                      "nodeType": "YulIdentifier",
                      "src": "13237:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13237:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13237:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13339:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13350:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13355:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13346:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13346:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13339:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3891c7f729786a7a8e966fb307051383dc40a735bce926cc46bbc261e66cae89_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13132:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13140:3:11",
                "type": ""
              }
            ],
            "src": "12998:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13541:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13551:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13563:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13574:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13559:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13559:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13551:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13598:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13609:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13594:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13594:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13617:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13623:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13613:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13613:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13587:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13587:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13587:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13643:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13777:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3891c7f729786a7a8e966fb307051383dc40a735bce926cc46bbc261e66cae89_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13651:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13651:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13643:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3891c7f729786a7a8e966fb307051383dc40a735bce926cc46bbc261e66cae89__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13521:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13536:4:11",
                "type": ""
              }
            ],
            "src": "13370:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13901:76:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13923:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13931:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13919:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13919:14:11"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13935:34:11",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13912:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13912:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13912:58:11"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13893:6:11",
                "type": ""
              }
            ],
            "src": "13795:182:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14129:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14139:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14205:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14210:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14146:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14146:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14139:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14311:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "14222:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14222:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14222:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14324:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14335:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14340:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14331:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14331:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14324:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14117:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14125:3:11",
                "type": ""
              }
            ],
            "src": "13983:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14526:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14536:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14548:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14559:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14544:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14544:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14536:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14583:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14594:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14579:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14579:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14602:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14608:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14598:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14598:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14572:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14572:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14572:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14628:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14762:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14636:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14636:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14628:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14506:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14521:4:11",
                "type": ""
              }
            ],
            "src": "14355:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14886:63:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14908:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14916:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14904:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14904:14:11"
                      },
                      {
                        "hexValue": "52414d5020414c524541445920455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14920:21:11",
                        "type": "",
                        "value": "RAMP ALREADY EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14897:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14897:45:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14897:45:11"
                }
              ]
            },
            "name": "store_literal_in_memory_9ecb31e870ebbe44a10dd5a1a7a3b9a0cc6e45deb0839400bba9482b2b30ebb3",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14878:6:11",
                "type": ""
              }
            ],
            "src": "14780:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15101:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15111:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15177:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15182:2:11",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15118:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15118:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15111:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15283:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9ecb31e870ebbe44a10dd5a1a7a3b9a0cc6e45deb0839400bba9482b2b30ebb3",
                      "nodeType": "YulIdentifier",
                      "src": "15194:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15194:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15194:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15296:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15307:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15312:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15303:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15303:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15296:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9ecb31e870ebbe44a10dd5a1a7a3b9a0cc6e45deb0839400bba9482b2b30ebb3_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15089:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15097:3:11",
                "type": ""
              }
            ],
            "src": "14955:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15498:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15508:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15520:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15531:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15516:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15516:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15508:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15555:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15566:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15551:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15551:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15574:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15580:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15570:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15570:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15544:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15544:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15544:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15600:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15734:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9ecb31e870ebbe44a10dd5a1a7a3b9a0cc6e45deb0839400bba9482b2b30ebb3_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15608:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15608:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15600:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9ecb31e870ebbe44a10dd5a1a7a3b9a0cc6e45deb0839400bba9482b2b30ebb3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15478:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15493:4:11",
                "type": ""
              }
            ],
            "src": "15327:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15817:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15834:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15857:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "15839:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15839:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15827:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15827:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15827:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15805:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15812:3:11",
                "type": ""
              }
            ],
            "src": "15752:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16030:288:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16040:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16052:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16063:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16048:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16048:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16040:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16120:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16133:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16144:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16129:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16129:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16076:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16076:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16076:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16201:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16214:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16225:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16210:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16210:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16157:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16157:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16157:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16283:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16296:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16307:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16292:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16292:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16239:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16239:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16239:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15986:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "15998:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16006:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16014:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16025:4:11",
                "type": ""
              }
            ],
            "src": "15876:442:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16364:76:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16418:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16427:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16430:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16420:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16420:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16420:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16387:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16409:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "16394:14:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16394:21:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16384:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16384:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16377:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16377:40:11"
                  },
                  "nodeType": "YulIf",
                  "src": "16374:60:11"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16357:5:11",
                "type": ""
              }
            ],
            "src": "16324:116:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16506:77:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16516:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "16531:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "16525:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16525:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "16516:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16571:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "16547:23:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16547:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16547:30:11"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "16484:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16492:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16500:5:11",
                "type": ""
              }
            ],
            "src": "16446:137:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16663:271:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16709:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "16711:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16711:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16711:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "16684:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16693:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16680:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16680:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16705:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "16676:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16676:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "16673:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16802:125:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16817:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16831:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "16821:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "16846:71:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16889:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "16900:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16885:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16885:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "16909:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "16856:28:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16856:61:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "16846:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16633:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "16644:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16656:6:11",
                "type": ""
              }
            ],
            "src": "16589:345:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17046:119:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17068:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17076:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17064:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17064:14:11"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17080:34:11",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17057:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17057:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17057:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17136:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17144:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17132:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17132:15:11"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17149:8:11",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17125:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17125:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17125:33:11"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17038:6:11",
                "type": ""
              }
            ],
            "src": "16940:225:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17317:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17327:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17393:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17398:2:11",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17334:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17334:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17327:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17499:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "17410:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17410:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17410:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17512:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17523:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17528:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17519:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17519:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17512:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17305:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17313:3:11",
                "type": ""
              }
            ],
            "src": "17171:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17714:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17724:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17736:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17747:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17732:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17732:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17724:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17771:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17782:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17767:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17767:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17790:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17796:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17786:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17786:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17760:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17760:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17760:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17816:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17950:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17824:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17824:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17816:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17694:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17709:4:11",
                "type": ""
              }
            ],
            "src": "17543:419:11"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c243c659333ad27407f563fc91c5fa7616c233b808cb99600dcda8fb37709b1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please set correct token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_c243c659333ad27407f563fc91c5fa7616c233b808cb99600dcda8fb37709b1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_c243c659333ad27407f563fc91c5fa7616c233b808cb99600dcda8fb37709b1a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c243c659333ad27407f563fc91c5fa7616c233b808cb99600dcda8fb37709b1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c243c659333ad27407f563fc91c5fa7616c233b808cb99600dcda8fb37709b1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_d56f5e20a62399d961eebab8cec2d2e0d80f81db90c4ab26886aaccdced6df45(memPtr) {\n\n        mstore(add(memPtr, 0), \"PLEASE CHECK YOUR BALANCE OR ALL\")\n\n        mstore(add(memPtr, 32), \"OWANCE.\")\n\n    }\n\n    function abi_encode_t_stringliteral_d56f5e20a62399d961eebab8cec2d2e0d80f81db90c4ab26886aaccdced6df45_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_d56f5e20a62399d961eebab8cec2d2e0d80f81db90c4ab26886aaccdced6df45(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d56f5e20a62399d961eebab8cec2d2e0d80f81db90c4ab26886aaccdced6df45__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d56f5e20a62399d961eebab8cec2d2e0d80f81db90c4ab26886aaccdced6df45_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_3c947fe6e32408035f7aa08fa6bda107361ba0679334e064d1d3da1f846c15d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"RAMP DOESN'T EXISTS\")\n\n    }\n\n    function abi_encode_t_stringliteral_3c947fe6e32408035f7aa08fa6bda107361ba0679334e064d1d3da1f846c15d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_3c947fe6e32408035f7aa08fa6bda107361ba0679334e064d1d3da1f846c15d2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c947fe6e32408035f7aa08fa6bda107361ba0679334e064d1d3da1f846c15d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c947fe6e32408035f7aa08fa6bda107361ba0679334e064d1d3da1f846c15d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3891c7f729786a7a8e966fb307051383dc40a735bce926cc46bbc261e66cae89(memPtr) {\n\n        mstore(add(memPtr, 0), \"ALREADY USING A RAMP, FINISH IT \")\n\n        mstore(add(memPtr, 32), \"AND PAY IT TO USE ANOTHER.\")\n\n    }\n\n    function abi_encode_t_stringliteral_3891c7f729786a7a8e966fb307051383dc40a735bce926cc46bbc261e66cae89_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 58)\n        store_literal_in_memory_3891c7f729786a7a8e966fb307051383dc40a735bce926cc46bbc261e66cae89(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3891c7f729786a7a8e966fb307051383dc40a735bce926cc46bbc261e66cae89__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3891c7f729786a7a8e966fb307051383dc40a735bce926cc46bbc261e66cae89_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9ecb31e870ebbe44a10dd5a1a7a3b9a0cc6e45deb0839400bba9482b2b30ebb3(memPtr) {\n\n        mstore(add(memPtr, 0), \"RAMP ALREADY EXISTS\")\n\n    }\n\n    function abi_encode_t_stringliteral_9ecb31e870ebbe44a10dd5a1a7a3b9a0cc6e45deb0839400bba9482b2b30ebb3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9ecb31e870ebbe44a10dd5a1a7a3b9a0cc6e45deb0839400bba9482b2b30ebb3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9ecb31e870ebbe44a10dd5a1a7a3b9a0cc6e45deb0839400bba9482b2b30ebb3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9ecb31e870ebbe44a10dd5a1a7a3b9a0cc6e45deb0839400bba9482b2b30ebb3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "236:1604:8:-:0;;;491:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;991:5:1;981:7;;:15;;;;;;;;;;;;;;;;;;547:13:8;539:5;;:21;;;;;;;;;;;;;;;;;;491:77;236:1604;;640:96:6;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:113::-;622:7;651:24;669:5;651:24;:::i;:::-;640:35;;568:113;;;:::o;687:156::-;777:41;812:5;777:41;:::i;:::-;770:5;767:52;757:80;;833:1;830;823:12;757:80;687:156;:::o;849:177::-;923:5;954:6;948:13;939:22;;970:50;1014:5;970:50;:::i;:::-;849:177;;;;:::o;1032:385::-;1119:6;1168:2;1156:9;1147:7;1143:23;1139:32;1136:119;;;1174:79;;:::i;:::-;1136:119;1294:1;1319:81;1392:7;1383:6;1372:9;1368:22;1319:81;:::i;:::-;1309:91;;1265:145;1032:385;;;;:::o;236:1604:8:-;;;;;;;",
  "deployedSourceMap": "236:1604:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:193;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1098:84:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;890:405:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;576:306:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1504:194;;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1303:193:8;1378:4;1776:1;1750:28;;1758:5;;;;;;;;;;;1750:28;;;;1742:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1412:8:1::1;:6;:8::i;:::-;1411:9;1403:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1434:2:8::2;1403:5;;;;;;;;;;;:15;;;1419:10;1403:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;:85;;;;;1486:2;1440:5;;;;;;;;;;;:15;;;1456:10;1476:4;1440:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;1403:85;1396:92;;1303:193:::0;:::o;1098:84:1:-;1145:4;1168:7;;;;;;;;;;;1161:14;;1098:84;:::o;890:405:8:-;1776:1;1750:28;;1758:5;;;;;;;;;;;1750:28;;;;1742:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1412:8:1::1;:6;:8::i;:::-;1411:9;1403:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;982:17:8::2;:15;:17::i;:::-;974:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1095:1;1068:5;1074:4;1068:11;;;;;;:::i;:::-;;;;;;;;;;;;;:16;;1062:30;;;;;:::i;:::-;;;:34;1054:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1180:1;1145:6;:18;1152:10;1145:18;;;;;;;;;;;;;;;:23;;1139:37;;;;;:::i;:::-;;;:42;1131:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;1276:5;1282:4;1276:11;;;;;;:::i;:::-;;;;;;;;;;;;;1255:6;:18;1262:10;1255:18;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;890:405:::0;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;576:306:8:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1412:8:1::1;:6;:8::i;:::-;1411:9;1403:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;737:1:8::2;709:5;715:4;709:11;;;;;;:::i;:::-;;;;;;;;;;;;;:16;;703:30;;;;;:::i;:::-;;;:35;;695:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;792:4;773:5;779:4;773:11;;;;;;:::i;:::-;;;;;;;;;;;;;:16;;:23;;;;;;;;;;;;:::i;:::-;;830:8;807:5;813:4;807:11;;;;;;:::i;:::-;;;;;;;;;;;;;:20;;:31;;;;;;;;;;;;:::i;:::-;;869:5;849;855:4;849:11;;;;;;:::i;:::-;;;;;;;;;;;;;:17;;:25;;;;576:306:::0;;;:::o;1504:194::-;1776:1;1750:28;;1758:5;;;;;;;;;;;1750:28;;;;1742:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1412:8:1::1;:6;:8::i;:::-;1411:9;1403:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1572:5:8::2;;;;;;;;;;;:18;;;1591:10;1611:4;1618:6;:18;1625:10;1618:18;;;;;;;;;;;;;;;:24;;;1572:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1675:15;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;::::0;::::2;;;;1688:1;1675:15;;::::0;1654:6:::2;:18;1661:10;1654:18;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1504:194::o:0;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:90:11:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:75::-;467:6;500:2;494:9;484:19;;434:75;:::o;515:117::-;624:1;621;614:12;638:117;747:1;744;737:12;761:117;870:1;867;860:12;884:117;993:1;990;983:12;1007:102;1048:6;1099:2;1095:7;1090:2;1083:5;1079:14;1075:28;1065:38;;1007:102;;;:::o;1115:180::-;1163:77;1160:1;1153:88;1260:4;1257:1;1250:15;1284:4;1281:1;1274:15;1301:281;1384:27;1406:4;1384:27;:::i;:::-;1376:6;1372:40;1514:6;1502:10;1499:22;1478:18;1466:10;1463:34;1460:62;1457:88;;;1525:18;;:::i;:::-;1457:88;1565:10;1561:2;1554:22;1344:238;1301:281;;:::o;1588:129::-;1622:6;1649:20;;:::i;:::-;1639:30;;1678:33;1706:4;1698:6;1678:33;:::i;:::-;1588:129;;;:::o;1723:308::-;1785:4;1875:18;1867:6;1864:30;1861:56;;;1897:18;;:::i;:::-;1861:56;1935:29;1957:6;1935:29;:::i;:::-;1927:37;;2019:4;2013;2009:15;2001:23;;1723:308;;;:::o;2037:154::-;2121:6;2116:3;2111;2098:30;2183:1;2174:6;2169:3;2165:16;2158:27;2037:154;;;:::o;2197:412::-;2275:5;2300:66;2316:49;2358:6;2316:49;:::i;:::-;2300:66;:::i;:::-;2291:75;;2389:6;2382:5;2375:21;2427:4;2420:5;2416:16;2465:3;2456:6;2451:3;2447:16;2444:25;2441:112;;;2472:79;;:::i;:::-;2441:112;2562:41;2596:6;2591:3;2586;2562:41;:::i;:::-;2281:328;2197:412;;;;;:::o;2629:340::-;2685:5;2734:3;2727:4;2719:6;2715:17;2711:27;2701:122;;2742:79;;:::i;:::-;2701:122;2859:6;2846:20;2884:79;2959:3;2951:6;2944:4;2936:6;2932:17;2884:79;:::i;:::-;2875:88;;2691:278;2629:340;;;;:::o;2975:509::-;3044:6;3093:2;3081:9;3072:7;3068:23;3064:32;3061:119;;;3099:79;;:::i;:::-;3061:119;3247:1;3236:9;3232:17;3219:31;3277:18;3269:6;3266:30;3263:117;;;3299:79;;:::i;:::-;3263:117;3404:63;3459:7;3450:6;3439:9;3435:22;3404:63;:::i;:::-;3394:73;;3190:287;2975:509;;;;:::o;3490:126::-;3527:7;3567:42;3560:5;3556:54;3545:65;;3490:126;;;:::o;3622:96::-;3659:7;3688:24;3706:5;3688:24;:::i;:::-;3677:35;;3622:96;;;:::o;3724:118::-;3811:24;3829:5;3811:24;:::i;:::-;3806:3;3799:37;3724:118;;:::o;3848:222::-;3941:4;3979:2;3968:9;3964:18;3956:26;;3992:71;4060:1;4049:9;4045:17;4036:6;3992:71;:::i;:::-;3848:222;;;;:::o;4076:77::-;4113:7;4142:5;4131:16;;4076:77;;;:::o;4159:122::-;4232:24;4250:5;4232:24;:::i;:::-;4225:5;4222:35;4212:63;;4271:1;4268;4261:12;4212:63;4159:122;:::o;4287:139::-;4333:5;4371:6;4358:20;4349:29;;4387:33;4414:5;4387:33;:::i;:::-;4287:139;;;;:::o;4432:979::-;4529:6;4537;4545;4594:2;4582:9;4573:7;4569:23;4565:32;4562:119;;;4600:79;;:::i;:::-;4562:119;4748:1;4737:9;4733:17;4720:31;4778:18;4770:6;4767:30;4764:117;;;4800:79;;:::i;:::-;4764:117;4905:63;4960:7;4951:6;4940:9;4936:22;4905:63;:::i;:::-;4895:73;;4691:287;5045:2;5034:9;5030:18;5017:32;5076:18;5068:6;5065:30;5062:117;;;5098:79;;:::i;:::-;5062:117;5203:63;5258:7;5249:6;5238:9;5234:22;5203:63;:::i;:::-;5193:73;;4988:288;5315:2;5341:53;5386:7;5377:6;5366:9;5362:22;5341:53;:::i;:::-;5331:63;;5286:118;4432:979;;;;;:::o;5417:122::-;5490:24;5508:5;5490:24;:::i;:::-;5483:5;5480:35;5470:63;;5529:1;5526;5519:12;5470:63;5417:122;:::o;5545:139::-;5591:5;5629:6;5616:20;5607:29;;5645:33;5672:5;5645:33;:::i;:::-;5545:139;;;;:::o;5690:329::-;5749:6;5798:2;5786:9;5777:7;5773:23;5769:32;5766:119;;;5804:79;;:::i;:::-;5766:119;5924:1;5949:53;5994:7;5985:6;5974:9;5970:22;5949:53;:::i;:::-;5939:63;;5895:117;5690:329;;;;:::o;6025:169::-;6109:11;6143:6;6138:3;6131:19;6183:4;6178:3;6174:14;6159:29;;6025:169;;;;:::o;6200:182::-;6340:34;6336:1;6328:6;6324:14;6317:58;6200:182;:::o;6388:366::-;6530:3;6551:67;6615:2;6610:3;6551:67;:::i;:::-;6544:74;;6627:93;6716:3;6627:93;:::i;:::-;6745:2;6740:3;6736:12;6729:19;;6388:366;;;:::o;6760:419::-;6926:4;6964:2;6953:9;6949:18;6941:26;;7013:9;7007:4;7003:20;6999:1;6988:9;6984:17;6977:47;7041:131;7167:4;7041:131;:::i;:::-;7033:139;;6760:419;;;:::o;7185:166::-;7325:18;7321:1;7313:6;7309:14;7302:42;7185:166;:::o;7357:366::-;7499:3;7520:67;7584:2;7579:3;7520:67;:::i;:::-;7513:74;;7596:93;7685:3;7596:93;:::i;:::-;7714:2;7709:3;7705:12;7698:19;;7357:366;;;:::o;7729:419::-;7895:4;7933:2;7922:9;7918:18;7910:26;;7982:9;7976:4;7972:20;7968:1;7957:9;7953:17;7946:47;8010:131;8136:4;8010:131;:::i;:::-;8002:139;;7729:419;;;:::o;8154:143::-;8211:5;8242:6;8236:13;8227:22;;8258:33;8285:5;8258:33;:::i;:::-;8154:143;;;;:::o;8303:351::-;8373:6;8422:2;8410:9;8401:7;8397:23;8393:32;8390:119;;;8428:79;;:::i;:::-;8390:119;8548:1;8573:64;8629:7;8620:6;8609:9;8605:22;8573:64;:::i;:::-;8563:74;;8519:128;8303:351;;;;:::o;8660:332::-;8781:4;8819:2;8808:9;8804:18;8796:26;;8832:71;8900:1;8889:9;8885:17;8876:6;8832:71;:::i;:::-;8913:72;8981:2;8970:9;8966:18;8957:6;8913:72;:::i;:::-;8660:332;;;;;:::o;8998:226::-;9138:34;9134:1;9126:6;9122:14;9115:58;9207:9;9202:2;9194:6;9190:15;9183:34;8998:226;:::o;9230:366::-;9372:3;9393:67;9457:2;9452:3;9393:67;:::i;:::-;9386:74;;9469:93;9558:3;9469:93;:::i;:::-;9587:2;9582:3;9578:12;9571:19;;9230:366;;;:::o;9602:419::-;9768:4;9806:2;9795:9;9791:18;9783:26;;9855:9;9849:4;9845:20;9841:1;9830:9;9826:17;9819:47;9883:131;10009:4;9883:131;:::i;:::-;9875:139;;9602:419;;;:::o;10027:99::-;10079:6;10113:5;10107:12;10097:22;;10027:99;;;:::o;10132:148::-;10234:11;10271:3;10256:18;;10132:148;;;;:::o;10286:307::-;10354:1;10364:113;10378:6;10375:1;10372:13;10364:113;;;10463:1;10458:3;10454:11;10448:18;10444:1;10439:3;10435:11;10428:39;10400:2;10397:1;10393:10;10388:15;;10364:113;;;10495:6;10492:1;10489:13;10486:101;;;10575:1;10566:6;10561:3;10557:16;10550:27;10486:101;10335:258;10286:307;;;:::o;10599:377::-;10705:3;10733:39;10766:5;10733:39;:::i;:::-;10788:89;10870:6;10865:3;10788:89;:::i;:::-;10781:96;;10886:52;10931:6;10926:3;10919:4;10912:5;10908:16;10886:52;:::i;:::-;10963:6;10958:3;10954:16;10947:23;;10709:267;10599:377;;;;:::o;10982:275::-;11114:3;11136:95;11227:3;11218:6;11136:95;:::i;:::-;11129:102;;11248:3;11241:10;;10982:275;;;;:::o;11263:180::-;11311:77;11308:1;11301:88;11408:4;11405:1;11398:15;11432:4;11429:1;11422:15;11449:320;11493:6;11530:1;11524:4;11520:12;11510:22;;11577:1;11571:4;11567:12;11598:18;11588:81;;11654:4;11646:6;11642:17;11632:27;;11588:81;11716:2;11708:6;11705:14;11685:18;11682:38;11679:84;;;11735:18;;:::i;:::-;11679:84;11500:269;11449:320;;;:::o;11775:169::-;11915:21;11911:1;11903:6;11899:14;11892:45;11775:169;:::o;11950:366::-;12092:3;12113:67;12177:2;12172:3;12113:67;:::i;:::-;12106:74;;12189:93;12278:3;12189:93;:::i;:::-;12307:2;12302:3;12298:12;12291:19;;11950:366;;;:::o;12322:419::-;12488:4;12526:2;12515:9;12511:18;12503:26;;12575:9;12569:4;12565:20;12561:1;12550:9;12546:17;12539:47;12603:131;12729:4;12603:131;:::i;:::-;12595:139;;12322:419;;;:::o;12747:245::-;12887:34;12883:1;12875:6;12871:14;12864:58;12956:28;12951:2;12943:6;12939:15;12932:53;12747:245;:::o;12998:366::-;13140:3;13161:67;13225:2;13220:3;13161:67;:::i;:::-;13154:74;;13237:93;13326:3;13237:93;:::i;:::-;13355:2;13350:3;13346:12;13339:19;;12998:366;;;:::o;13370:419::-;13536:4;13574:2;13563:9;13559:18;13551:26;;13623:9;13617:4;13613:20;13609:1;13598:9;13594:17;13587:47;13651:131;13777:4;13651:131;:::i;:::-;13643:139;;13370:419;;;:::o;13795:182::-;13935:34;13931:1;13923:6;13919:14;13912:58;13795:182;:::o;13983:366::-;14125:3;14146:67;14210:2;14205:3;14146:67;:::i;:::-;14139:74;;14222:93;14311:3;14222:93;:::i;:::-;14340:2;14335:3;14331:12;14324:19;;13983:366;;;:::o;14355:419::-;14521:4;14559:2;14548:9;14544:18;14536:26;;14608:9;14602:4;14598:20;14594:1;14583:9;14579:17;14572:47;14636:131;14762:4;14636:131;:::i;:::-;14628:139;;14355:419;;;:::o;14780:169::-;14920:21;14916:1;14908:6;14904:14;14897:45;14780:169;:::o;14955:366::-;15097:3;15118:67;15182:2;15177:3;15118:67;:::i;:::-;15111:74;;15194:93;15283:3;15194:93;:::i;:::-;15312:2;15307:3;15303:12;15296:19;;14955:366;;;:::o;15327:419::-;15493:4;15531:2;15520:9;15516:18;15508:26;;15580:9;15574:4;15570:20;15566:1;15555:9;15551:17;15544:47;15608:131;15734:4;15608:131;:::i;:::-;15600:139;;15327:419;;;:::o;15752:118::-;15839:24;15857:5;15839:24;:::i;:::-;15834:3;15827:37;15752:118;;:::o;15876:442::-;16025:4;16063:2;16052:9;16048:18;16040:26;;16076:71;16144:1;16133:9;16129:17;16120:6;16076:71;:::i;:::-;16157:72;16225:2;16214:9;16210:18;16201:6;16157:72;:::i;:::-;16239;16307:2;16296:9;16292:18;16283:6;16239:72;:::i;:::-;15876:442;;;;;;:::o;16324:116::-;16394:21;16409:5;16394:21;:::i;:::-;16387:5;16384:32;16374:60;;16430:1;16427;16420:12;16374:60;16324:116;:::o;16446:137::-;16500:5;16531:6;16525:13;16516:22;;16547:30;16571:5;16547:30;:::i;:::-;16446:137;;;;:::o;16589:345::-;16656:6;16705:2;16693:9;16684:7;16680:23;16676:32;16673:119;;;16711:79;;:::i;:::-;16673:119;16831:1;16856:61;16909:7;16900:6;16889:9;16885:22;16856:61;:::i;:::-;16846:71;;16802:125;16589:345;;;;:::o;16940:225::-;17080:34;17076:1;17068:6;17064:14;17057:58;17149:8;17144:2;17136:6;17132:15;17125:33;16940:225;:::o;17171:366::-;17313:3;17334:67;17398:2;17393:3;17334:67;:::i;:::-;17327:74;;17410:93;17499:3;17410:93;:::i;:::-;17528:2;17523:3;17519:12;17512:19;;17171:366;;;:::o;17543:419::-;17709:4;17747:2;17736:9;17732:18;17724:26;;17796:9;17790:4;17786:20;17782:1;17771:9;17767:17;17760:47;17824:131;17950:4;17824:131;:::i;:::-;17816:139;;17543:419;;;:::o",
  "source": "// SPDX-License-Identifier: NONE\r\n\r\npragma solidity ^ 0.8.11;\r\n\r\nimport './rpd_interface.sol';\r\nimport './rpd_token.sol';\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\n\r\ncontract highway is IRapiDrive, Ownable, Pausable {\r\n\r\n    RPDToken TOKEN;\r\n\r\n    struct RAMP {\r\n        string name;\r\n        string location;\r\n        uint price;\r\n\r\n    }\r\n    mapping(address => RAMP) in_use;\r\n    mapping(string => RAMP) ramps;\r\n\r\n    constructor (RPDToken token_address) {\r\n        TOKEN = token_address;\r\n    }\r\n\r\n    function create_ramp(string memory name, string memory location, uint price) public onlyOwner whenNotPaused {\r\n        require(bytes(ramps[name].name).length <= 0, \"RAMP ALREADY EXISTS\");\r\n        ramps[name].name = name;\r\n        ramps[name].location = location;\r\n        ramps[name].price = price;\r\n    }\r\n\r\n    function use_ramp(string memory name) public require_token whenNotPaused {\r\n        require(check_allowance(), 'PLEASE CHECK YOUR BALANCE OR ALLOWANCE.');\r\n        require(bytes(ramps[name].name).length > 0, \"RAMP DOESN'T EXISTS\");\r\n        require(bytes(in_use[msg.sender].name).length == 0, \"ALREADY USING A RAMP, FINISH IT AND PAY IT TO USE ANOTHER.\");\r\n        in_use[msg.sender] = ramps[name];\r\n    }\r\n\r\n    function check_allowance() public view require_token whenNotPaused returns(bool)  {\r\n        return TOKEN.balanceOf(msg.sender) >= 10 && TOKEN.allowance(msg.sender, address(this)) >= 10;\r\n    }\r\n\r\n    function pay_ramp() external require_token whenNotPaused {\r\n        TOKEN.transferFrom(msg.sender, address(this), in_use[msg.sender].price);\r\n        in_use[msg.sender] = RAMP('', '', 0);\r\n    }\r\n\r\n    modifier require_token() {\r\n        require(address(TOKEN) != address(0), 'Please set correct token address');\r\n        _;\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\Users\\Pavon\\Desktop\\shacke4\\contracts\\rpd_highway.sol",
  "ast": {
    "absolutePath": "project:/contracts/rpd_highway.sol",
    "exportedSymbols": {
      "Context": [
        949
      ],
      "ERC20": [
        824
      ],
      "IERC20": [
        902
      ],
      "IERC20Metadata": [
        927
      ],
      "IRapiDrive": [
        1241
      ],
      "Ownable": [
        104
      ],
      "Pausable": [
        196
      ],
      "RPDToken": [
        1289
      ],
      "ReentrancyGuard": [
        236
      ],
      "highway": [
        1211
      ]
    },
    "id": 1212,
    "license": "NONE",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 984,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:25:8"
      },
      {
        "absolutePath": "project:/contracts/rpd_interface.sol",
        "file": "./rpd_interface.sol",
        "id": 985,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1212,
        "sourceUnit": 1242,
        "src": "65:29:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/rpd_token.sol",
        "file": "./rpd_token.sol",
        "id": 986,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1212,
        "sourceUnit": 1290,
        "src": "96:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 987,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1212,
        "sourceUnit": 105,
        "src": "123:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 988,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1212,
        "sourceUnit": 197,
        "src": "177:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 989,
              "name": "IRapiDrive",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1241,
              "src": "256:10:8"
            },
            "id": 990,
            "nodeType": "InheritanceSpecifier",
            "src": "256:10:8"
          },
          {
            "baseName": {
              "id": 991,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "268:7:8"
            },
            "id": 992,
            "nodeType": "InheritanceSpecifier",
            "src": "268:7:8"
          },
          {
            "baseName": {
              "id": 993,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 196,
              "src": "277:8:8"
            },
            "id": 994,
            "nodeType": "InheritanceSpecifier",
            "src": "277:8:8"
          }
        ],
        "canonicalName": "highway",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1211,
        "linearizedBaseContracts": [
          1211,
          196,
          104,
          949,
          1241
        ],
        "name": "highway",
        "nameLocation": "245:7:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 997,
            "mutability": "mutable",
            "name": "TOKEN",
            "nameLocation": "304:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 1211,
            "src": "295:14:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RPDToken_$1289",
              "typeString": "contract RPDToken"
            },
            "typeName": {
              "id": 996,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 995,
                "name": "RPDToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1289,
                "src": "295:8:8"
              },
              "referencedDeclaration": 1289,
              "src": "295:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RPDToken_$1289",
                "typeString": "contract RPDToken"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "highway.RAMP",
            "id": 1004,
            "members": [
              {
                "constant": false,
                "id": 999,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "348:4:8",
                "nodeType": "VariableDeclaration",
                "scope": 1004,
                "src": "341:11:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 998,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "341:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1001,
                "mutability": "mutable",
                "name": "location",
                "nameLocation": "370:8:8",
                "nodeType": "VariableDeclaration",
                "scope": 1004,
                "src": "363:15:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1000,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "363:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1003,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "394:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 1004,
                "src": "389:10:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1002,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "389:4:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RAMP",
            "nameLocation": "325:4:8",
            "nodeType": "StructDefinition",
            "scope": 1211,
            "src": "318:91:8",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1009,
            "mutability": "mutable",
            "name": "in_use",
            "nameLocation": "440:6:8",
            "nodeType": "VariableDeclaration",
            "scope": 1211,
            "src": "415:31:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RAMP_$1004_storage_$",
              "typeString": "mapping(address => struct highway.RAMP)"
            },
            "typeName": {
              "id": 1008,
              "keyType": {
                "id": 1005,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "423:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "415:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RAMP_$1004_storage_$",
                "typeString": "mapping(address => struct highway.RAMP)"
              },
              "valueType": {
                "id": 1007,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1006,
                  "name": "RAMP",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1004,
                  "src": "434:4:8"
                },
                "referencedDeclaration": 1004,
                "src": "434:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RAMP_$1004_storage_ptr",
                  "typeString": "struct highway.RAMP"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1014,
            "mutability": "mutable",
            "name": "ramps",
            "nameLocation": "477:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 1211,
            "src": "453:29:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
              "typeString": "mapping(string => struct highway.RAMP)"
            },
            "typeName": {
              "id": 1013,
              "keyType": {
                "id": 1010,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "461:6:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "453:23:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
                "typeString": "mapping(string => struct highway.RAMP)"
              },
              "valueType": {
                "id": 1012,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1011,
                  "name": "RAMP",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1004,
                  "src": "471:4:8"
                },
                "referencedDeclaration": 1004,
                "src": "471:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RAMP_$1004_storage_ptr",
                  "typeString": "struct highway.RAMP"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1024,
              "nodeType": "Block",
              "src": "528:40:8",
              "statements": [
                {
                  "expression": {
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1020,
                      "name": "TOKEN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "539:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RPDToken_$1289",
                        "typeString": "contract RPDToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1021,
                      "name": "token_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1017,
                      "src": "547:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RPDToken_$1289",
                        "typeString": "contract RPDToken"
                      }
                    },
                    "src": "539:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RPDToken_$1289",
                      "typeString": "contract RPDToken"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "539:21:8"
                }
              ]
            },
            "id": 1025,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1017,
                  "mutability": "mutable",
                  "name": "token_address",
                  "nameLocation": "513:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1025,
                  "src": "504:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RPDToken_$1289",
                    "typeString": "contract RPDToken"
                  },
                  "typeName": {
                    "id": 1016,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1015,
                      "name": "RPDToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1289,
                      "src": "504:8:8"
                    },
                    "referencedDeclaration": 1289,
                    "src": "504:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RPDToken_$1289",
                      "typeString": "contract RPDToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "503:24:8"
            },
            "returnParameters": {
              "id": 1019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:0:8"
            },
            "scope": 1211,
            "src": "491:77:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1224
            ],
            "body": {
              "id": 1073,
              "nodeType": "Block",
              "src": "684:198:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1041,
                                    "name": "ramps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1014,
                                    "src": "709:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
                                      "typeString": "mapping(string memory => struct highway.RAMP storage ref)"
                                    }
                                  },
                                  "id": 1043,
                                  "indexExpression": {
                                    "id": 1042,
                                    "name": "name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1027,
                                    "src": "715:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "709:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                                    "typeString": "struct highway.RAMP storage ref"
                                  }
                                },
                                "id": 1044,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 999,
                                "src": "709:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 1040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "703:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 1039,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "703:5:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "703:23:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "703:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "737:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "703:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52414d5020414c524541445920455849535453",
                        "id": 1049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "740:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ecb31e870ebbe44a10dd5a1a7a3b9a0cc6e45deb0839400bba9482b2b30ebb3",
                          "typeString": "literal_string \"RAMP ALREADY EXISTS\""
                        },
                        "value": "RAMP ALREADY EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ecb31e870ebbe44a10dd5a1a7a3b9a0cc6e45deb0839400bba9482b2b30ebb3",
                          "typeString": "literal_string \"RAMP ALREADY EXISTS\""
                        }
                      ],
                      "id": 1038,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "695:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "695:67:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1051,
                  "nodeType": "ExpressionStatement",
                  "src": "695:67:8"
                },
                {
                  "expression": {
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1052,
                          "name": "ramps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "773:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
                            "typeString": "mapping(string memory => struct highway.RAMP storage ref)"
                          }
                        },
                        "id": 1054,
                        "indexExpression": {
                          "id": 1053,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1027,
                          "src": "779:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "773:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                          "typeString": "struct highway.RAMP storage ref"
                        }
                      },
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 999,
                      "src": "773:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1056,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1027,
                      "src": "792:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "773:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1058,
                  "nodeType": "ExpressionStatement",
                  "src": "773:23:8"
                },
                {
                  "expression": {
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1059,
                          "name": "ramps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "807:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
                            "typeString": "mapping(string memory => struct highway.RAMP storage ref)"
                          }
                        },
                        "id": 1061,
                        "indexExpression": {
                          "id": 1060,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1027,
                          "src": "813:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "807:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                          "typeString": "struct highway.RAMP storage ref"
                        }
                      },
                      "id": 1062,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "location",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1001,
                      "src": "807:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1063,
                      "name": "location",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1029,
                      "src": "830:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "807:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1065,
                  "nodeType": "ExpressionStatement",
                  "src": "807:31:8"
                },
                {
                  "expression": {
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1066,
                          "name": "ramps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "849:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
                            "typeString": "mapping(string memory => struct highway.RAMP storage ref)"
                          }
                        },
                        "id": 1068,
                        "indexExpression": {
                          "id": 1067,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1027,
                          "src": "855:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "849:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                          "typeString": "struct highway.RAMP storage ref"
                        }
                      },
                      "id": 1069,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1003,
                      "src": "849:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1070,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1031,
                      "src": "869:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "849:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1072,
                  "nodeType": "ExpressionStatement",
                  "src": "849:25:8"
                }
              ]
            },
            "functionSelector": "b1263b7f",
            "id": 1074,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1034,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1033,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "660:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "660:9:8"
              },
              {
                "id": 1036,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1035,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "670:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "670:13:8"
              }
            ],
            "name": "create_ramp",
            "nameLocation": "585:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1027,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "611:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "597:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "location",
                  "nameLocation": "631:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "617:22:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "646:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "641:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "596:56:8"
            },
            "returnParameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "684:0:8"
            },
            "scope": 1211,
            "src": "576:306:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1230
            ],
            "body": {
              "id": 1127,
              "nodeType": "Block",
              "src": "963:332:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1084,
                          "name": "check_allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1158,
                          "src": "982:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "982:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "504c4541534520434845434b20594f55522042414c414e4345204f5220414c4c4f57414e43452e",
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1001:41:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d56f5e20a62399d961eebab8cec2d2e0d80f81db90c4ab26886aaccdced6df45",
                          "typeString": "literal_string \"PLEASE CHECK YOUR BALANCE OR ALLOWANCE.\""
                        },
                        "value": "PLEASE CHECK YOUR BALANCE OR ALLOWANCE."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d56f5e20a62399d961eebab8cec2d2e0d80f81db90c4ab26886aaccdced6df45",
                          "typeString": "literal_string \"PLEASE CHECK YOUR BALANCE OR ALLOWANCE.\""
                        }
                      ],
                      "id": 1083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "974:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:69:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1088,
                  "nodeType": "ExpressionStatement",
                  "src": "974:69:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1092,
                                    "name": "ramps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1014,
                                    "src": "1068:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
                                      "typeString": "mapping(string memory => struct highway.RAMP storage ref)"
                                    }
                                  },
                                  "id": 1094,
                                  "indexExpression": {
                                    "id": 1093,
                                    "name": "name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1076,
                                    "src": "1074:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1068:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                                    "typeString": "struct highway.RAMP storage ref"
                                  }
                                },
                                "id": 1095,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 999,
                                "src": "1068:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 1091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1062:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 1090,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1062:5:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1062:23:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1062:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1095:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1062:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52414d5020444f45534e275420455849535453",
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1098:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c947fe6e32408035f7aa08fa6bda107361ba0679334e064d1d3da1f846c15d2",
                          "typeString": "literal_string \"RAMP DOESN'T EXISTS\""
                        },
                        "value": "RAMP DOESN'T EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c947fe6e32408035f7aa08fa6bda107361ba0679334e064d1d3da1f846c15d2",
                          "typeString": "literal_string \"RAMP DOESN'T EXISTS\""
                        }
                      ],
                      "id": 1089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1054:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1054:66:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1102,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:66:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1106,
                                    "name": "in_use",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1009,
                                    "src": "1145:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RAMP_$1004_storage_$",
                                      "typeString": "mapping(address => struct highway.RAMP storage ref)"
                                    }
                                  },
                                  "id": 1109,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1107,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1152:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1108,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1152:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1145:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                                    "typeString": "struct highway.RAMP storage ref"
                                  }
                                },
                                "id": 1110,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 999,
                                "src": "1145:23:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 1105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1139:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 1104,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1139:5:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1139:30:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1139:37:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1180:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1139:42:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414c5245414459205553494e4720412052414d502c2046494e49534820495420414e442050415920495420544f2055534520414e4f544845522e",
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1183:60:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3891c7f729786a7a8e966fb307051383dc40a735bce926cc46bbc261e66cae89",
                          "typeString": "literal_string \"ALREADY USING A RAMP, FINISH IT AND PAY IT TO USE ANOTHER.\""
                        },
                        "value": "ALREADY USING A RAMP, FINISH IT AND PAY IT TO USE ANOTHER."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3891c7f729786a7a8e966fb307051383dc40a735bce926cc46bbc261e66cae89",
                          "typeString": "literal_string \"ALREADY USING A RAMP, FINISH IT AND PAY IT TO USE ANOTHER.\""
                        }
                      ],
                      "id": 1103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1131:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1131:113:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "1131:113:8"
                },
                {
                  "expression": {
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1118,
                        "name": "in_use",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1009,
                        "src": "1255:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RAMP_$1004_storage_$",
                          "typeString": "mapping(address => struct highway.RAMP storage ref)"
                        }
                      },
                      "id": 1121,
                      "indexExpression": {
                        "expression": {
                          "id": 1119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1262:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1262:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1255:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                        "typeString": "struct highway.RAMP storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 1122,
                        "name": "ramps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "1276:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
                          "typeString": "mapping(string memory => struct highway.RAMP storage ref)"
                        }
                      },
                      "id": 1124,
                      "indexExpression": {
                        "id": 1123,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "1282:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1276:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                        "typeString": "struct highway.RAMP storage ref"
                      }
                    },
                    "src": "1255:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                      "typeString": "struct highway.RAMP storage ref"
                    }
                  },
                  "id": 1126,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:32:8"
                }
              ]
            },
            "functionSelector": "663868aa",
            "id": 1128,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1079,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1078,
                  "name": "require_token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1210,
                  "src": "935:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "935:13:8"
              },
              {
                "id": 1081,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1080,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "949:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "949:13:8"
              }
            ],
            "name": "use_ramp",
            "nameLocation": "899:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1076,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "922:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "908:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1075,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "907:20:8"
            },
            "returnParameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "963:0:8"
            },
            "scope": 1211,
            "src": "890:405:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1236
            ],
            "body": {
              "id": 1157,
              "nodeType": "Block",
              "src": "1385:111:8",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1139,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1419:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1419:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1137,
                            "name": "TOKEN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "1403:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RPDToken_$1289",
                              "typeString": "contract RPDToken"
                            }
                          },
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 335,
                          "src": "1403:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1403:27:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1434:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "1403:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1146,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1456:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1456:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1150,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1476:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_highway_$1211",
                                  "typeString": "contract highway"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_highway_$1211",
                                  "typeString": "contract highway"
                                }
                              ],
                              "id": 1149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1468:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1148,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1468:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1468:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1144,
                            "name": "TOKEN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "1440:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RPDToken_$1289",
                              "typeString": "contract RPDToken"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 378,
                          "src": "1440:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 1152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1440:42:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1486:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "1440:48:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1403:85:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1136,
                  "id": 1156,
                  "nodeType": "Return",
                  "src": "1396:92:8"
                }
              ]
            },
            "functionSelector": "4ddd15d5",
            "id": 1158,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1131,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1130,
                  "name": "require_token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1210,
                  "src": "1342:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1342:13:8"
              },
              {
                "id": 1133,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1132,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "1356:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1356:13:8"
              }
            ],
            "name": "check_allowance",
            "nameLocation": "1312:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:2:8"
            },
            "returnParameters": {
              "id": 1136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "1378:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1134,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1377:6:8"
            },
            "scope": 1211,
            "src": "1303:193:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1240
            ],
            "body": {
              "id": 1192,
              "nodeType": "Block",
              "src": "1561:137:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1168,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1591:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1591:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1172,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1611:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_highway_$1211",
                              "typeString": "contract highway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_highway_$1211",
                              "typeString": "contract highway"
                            }
                          ],
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1603:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1170,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1603:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1603:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1174,
                            "name": "in_use",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1009,
                            "src": "1618:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RAMP_$1004_storage_$",
                              "typeString": "mapping(address => struct highway.RAMP storage ref)"
                            }
                          },
                          "id": 1177,
                          "indexExpression": {
                            "expression": {
                              "id": 1175,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1625:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1625:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1618:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                            "typeString": "struct highway.RAMP storage ref"
                          }
                        },
                        "id": 1178,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1003,
                        "src": "1618:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1165,
                        "name": "TOKEN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "1572:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RPDToken_$1289",
                          "typeString": "contract RPDToken"
                        }
                      },
                      "id": 1167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 436,
                      "src": "1572:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1572:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1180,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:71:8"
                },
                {
                  "expression": {
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1181,
                        "name": "in_use",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1009,
                        "src": "1654:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RAMP_$1004_storage_$",
                          "typeString": "mapping(address => struct highway.RAMP storage ref)"
                        }
                      },
                      "id": 1184,
                      "indexExpression": {
                        "expression": {
                          "id": 1182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1661:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1661:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1654:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                        "typeString": "struct highway.RAMP storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "",
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1680:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        {
                          "hexValue": "",
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1684:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        {
                          "hexValue": "30",
                          "id": 1188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1688:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1185,
                        "name": "RAMP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1004,
                        "src": "1675:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RAMP_$1004_storage_ptr_$",
                          "typeString": "type(struct highway.RAMP storage pointer)"
                        }
                      },
                      "id": 1189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1675:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RAMP_$1004_memory_ptr",
                        "typeString": "struct highway.RAMP memory"
                      }
                    },
                    "src": "1654:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                      "typeString": "struct highway.RAMP storage ref"
                    }
                  },
                  "id": 1191,
                  "nodeType": "ExpressionStatement",
                  "src": "1654:36:8"
                }
              ]
            },
            "functionSelector": "cd5a3942",
            "id": 1193,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1161,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1160,
                  "name": "require_token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1210,
                  "src": "1533:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1533:13:8"
              },
              {
                "id": 1163,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1162,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "1547:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1547:13:8"
              }
            ],
            "name": "pay_ramp",
            "nameLocation": "1513:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1521:2:8"
            },
            "returnParameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1561:0:8"
            },
            "scope": 1211,
            "src": "1504:194:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1209,
              "nodeType": "Block",
              "src": "1731:104:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1198,
                              "name": "TOKEN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "1758:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RPDToken_$1289",
                                "typeString": "contract RPDToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RPDToken_$1289",
                                "typeString": "contract RPDToken"
                              }
                            ],
                            "id": 1197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1750:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1196,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1750:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1750:14:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1776:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1768:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1200,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1768:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1768:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1750:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c656173652073657420636f727265637420746f6b656e2061646472657373",
                        "id": 1205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1780:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c243c659333ad27407f563fc91c5fa7616c233b808cb99600dcda8fb37709b1a",
                          "typeString": "literal_string \"Please set correct token address\""
                        },
                        "value": "Please set correct token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c243c659333ad27407f563fc91c5fa7616c233b808cb99600dcda8fb37709b1a",
                          "typeString": "literal_string \"Please set correct token address\""
                        }
                      ],
                      "id": 1195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1742:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1742:73:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1207,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:73:8"
                },
                {
                  "id": 1208,
                  "nodeType": "PlaceholderStatement",
                  "src": "1826:1:8"
                }
              ]
            },
            "id": 1210,
            "name": "require_token",
            "nameLocation": "1715:13:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1728:2:8"
            },
            "src": "1706:129:8",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1212,
        "src": "236:1604:8",
        "usedErrors": []
      }
    ],
    "src": "36:1804:8"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/rpd_highway.sol",
    "exportedSymbols": {
      "Context": [
        949
      ],
      "ERC20": [
        824
      ],
      "IERC20": [
        902
      ],
      "IERC20Metadata": [
        927
      ],
      "IRapiDrive": [
        1241
      ],
      "Ownable": [
        104
      ],
      "Pausable": [
        196
      ],
      "RPDToken": [
        1289
      ],
      "ReentrancyGuard": [
        236
      ],
      "highway": [
        1211
      ]
    },
    "id": 1212,
    "license": "NONE",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 984,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:25:8"
      },
      {
        "absolutePath": "project:/contracts/rpd_interface.sol",
        "file": "./rpd_interface.sol",
        "id": 985,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1212,
        "sourceUnit": 1242,
        "src": "65:29:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/rpd_token.sol",
        "file": "./rpd_token.sol",
        "id": 986,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1212,
        "sourceUnit": 1290,
        "src": "96:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 987,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1212,
        "sourceUnit": 105,
        "src": "123:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 988,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1212,
        "sourceUnit": 197,
        "src": "177:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 989,
              "name": "IRapiDrive",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1241,
              "src": "256:10:8"
            },
            "id": 990,
            "nodeType": "InheritanceSpecifier",
            "src": "256:10:8"
          },
          {
            "baseName": {
              "id": 991,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "268:7:8"
            },
            "id": 992,
            "nodeType": "InheritanceSpecifier",
            "src": "268:7:8"
          },
          {
            "baseName": {
              "id": 993,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 196,
              "src": "277:8:8"
            },
            "id": 994,
            "nodeType": "InheritanceSpecifier",
            "src": "277:8:8"
          }
        ],
        "canonicalName": "highway",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1211,
        "linearizedBaseContracts": [
          1211,
          196,
          104,
          949,
          1241
        ],
        "name": "highway",
        "nameLocation": "245:7:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 997,
            "mutability": "mutable",
            "name": "TOKEN",
            "nameLocation": "304:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 1211,
            "src": "295:14:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RPDToken_$1289",
              "typeString": "contract RPDToken"
            },
            "typeName": {
              "id": 996,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 995,
                "name": "RPDToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1289,
                "src": "295:8:8"
              },
              "referencedDeclaration": 1289,
              "src": "295:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RPDToken_$1289",
                "typeString": "contract RPDToken"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "highway.RAMP",
            "id": 1004,
            "members": [
              {
                "constant": false,
                "id": 999,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "348:4:8",
                "nodeType": "VariableDeclaration",
                "scope": 1004,
                "src": "341:11:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 998,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "341:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1001,
                "mutability": "mutable",
                "name": "location",
                "nameLocation": "370:8:8",
                "nodeType": "VariableDeclaration",
                "scope": 1004,
                "src": "363:15:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1000,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "363:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1003,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "394:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 1004,
                "src": "389:10:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1002,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "389:4:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RAMP",
            "nameLocation": "325:4:8",
            "nodeType": "StructDefinition",
            "scope": 1211,
            "src": "318:91:8",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1009,
            "mutability": "mutable",
            "name": "in_use",
            "nameLocation": "440:6:8",
            "nodeType": "VariableDeclaration",
            "scope": 1211,
            "src": "415:31:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RAMP_$1004_storage_$",
              "typeString": "mapping(address => struct highway.RAMP)"
            },
            "typeName": {
              "id": 1008,
              "keyType": {
                "id": 1005,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "423:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "415:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RAMP_$1004_storage_$",
                "typeString": "mapping(address => struct highway.RAMP)"
              },
              "valueType": {
                "id": 1007,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1006,
                  "name": "RAMP",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1004,
                  "src": "434:4:8"
                },
                "referencedDeclaration": 1004,
                "src": "434:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RAMP_$1004_storage_ptr",
                  "typeString": "struct highway.RAMP"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1014,
            "mutability": "mutable",
            "name": "ramps",
            "nameLocation": "477:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 1211,
            "src": "453:29:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
              "typeString": "mapping(string => struct highway.RAMP)"
            },
            "typeName": {
              "id": 1013,
              "keyType": {
                "id": 1010,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "461:6:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "453:23:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
                "typeString": "mapping(string => struct highway.RAMP)"
              },
              "valueType": {
                "id": 1012,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1011,
                  "name": "RAMP",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1004,
                  "src": "471:4:8"
                },
                "referencedDeclaration": 1004,
                "src": "471:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RAMP_$1004_storage_ptr",
                  "typeString": "struct highway.RAMP"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1024,
              "nodeType": "Block",
              "src": "528:40:8",
              "statements": [
                {
                  "expression": {
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1020,
                      "name": "TOKEN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "539:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RPDToken_$1289",
                        "typeString": "contract RPDToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1021,
                      "name": "token_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1017,
                      "src": "547:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RPDToken_$1289",
                        "typeString": "contract RPDToken"
                      }
                    },
                    "src": "539:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RPDToken_$1289",
                      "typeString": "contract RPDToken"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "539:21:8"
                }
              ]
            },
            "id": 1025,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1017,
                  "mutability": "mutable",
                  "name": "token_address",
                  "nameLocation": "513:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1025,
                  "src": "504:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RPDToken_$1289",
                    "typeString": "contract RPDToken"
                  },
                  "typeName": {
                    "id": 1016,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1015,
                      "name": "RPDToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1289,
                      "src": "504:8:8"
                    },
                    "referencedDeclaration": 1289,
                    "src": "504:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RPDToken_$1289",
                      "typeString": "contract RPDToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "503:24:8"
            },
            "returnParameters": {
              "id": 1019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:0:8"
            },
            "scope": 1211,
            "src": "491:77:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1224
            ],
            "body": {
              "id": 1073,
              "nodeType": "Block",
              "src": "684:198:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1041,
                                    "name": "ramps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1014,
                                    "src": "709:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
                                      "typeString": "mapping(string memory => struct highway.RAMP storage ref)"
                                    }
                                  },
                                  "id": 1043,
                                  "indexExpression": {
                                    "id": 1042,
                                    "name": "name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1027,
                                    "src": "715:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "709:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                                    "typeString": "struct highway.RAMP storage ref"
                                  }
                                },
                                "id": 1044,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 999,
                                "src": "709:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 1040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "703:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 1039,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "703:5:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "703:23:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "703:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "737:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "703:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52414d5020414c524541445920455849535453",
                        "id": 1049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "740:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ecb31e870ebbe44a10dd5a1a7a3b9a0cc6e45deb0839400bba9482b2b30ebb3",
                          "typeString": "literal_string \"RAMP ALREADY EXISTS\""
                        },
                        "value": "RAMP ALREADY EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ecb31e870ebbe44a10dd5a1a7a3b9a0cc6e45deb0839400bba9482b2b30ebb3",
                          "typeString": "literal_string \"RAMP ALREADY EXISTS\""
                        }
                      ],
                      "id": 1038,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "695:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "695:67:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1051,
                  "nodeType": "ExpressionStatement",
                  "src": "695:67:8"
                },
                {
                  "expression": {
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1052,
                          "name": "ramps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "773:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
                            "typeString": "mapping(string memory => struct highway.RAMP storage ref)"
                          }
                        },
                        "id": 1054,
                        "indexExpression": {
                          "id": 1053,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1027,
                          "src": "779:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "773:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                          "typeString": "struct highway.RAMP storage ref"
                        }
                      },
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 999,
                      "src": "773:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1056,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1027,
                      "src": "792:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "773:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1058,
                  "nodeType": "ExpressionStatement",
                  "src": "773:23:8"
                },
                {
                  "expression": {
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1059,
                          "name": "ramps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "807:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
                            "typeString": "mapping(string memory => struct highway.RAMP storage ref)"
                          }
                        },
                        "id": 1061,
                        "indexExpression": {
                          "id": 1060,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1027,
                          "src": "813:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "807:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                          "typeString": "struct highway.RAMP storage ref"
                        }
                      },
                      "id": 1062,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "location",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1001,
                      "src": "807:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1063,
                      "name": "location",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1029,
                      "src": "830:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "807:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1065,
                  "nodeType": "ExpressionStatement",
                  "src": "807:31:8"
                },
                {
                  "expression": {
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1066,
                          "name": "ramps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "849:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
                            "typeString": "mapping(string memory => struct highway.RAMP storage ref)"
                          }
                        },
                        "id": 1068,
                        "indexExpression": {
                          "id": 1067,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1027,
                          "src": "855:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "849:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                          "typeString": "struct highway.RAMP storage ref"
                        }
                      },
                      "id": 1069,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1003,
                      "src": "849:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1070,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1031,
                      "src": "869:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "849:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1072,
                  "nodeType": "ExpressionStatement",
                  "src": "849:25:8"
                }
              ]
            },
            "functionSelector": "b1263b7f",
            "id": 1074,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1034,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1033,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "660:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "660:9:8"
              },
              {
                "id": 1036,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1035,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "670:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "670:13:8"
              }
            ],
            "name": "create_ramp",
            "nameLocation": "585:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1027,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "611:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "597:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "location",
                  "nameLocation": "631:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "617:22:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "646:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "641:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "596:56:8"
            },
            "returnParameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "684:0:8"
            },
            "scope": 1211,
            "src": "576:306:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1230
            ],
            "body": {
              "id": 1127,
              "nodeType": "Block",
              "src": "963:332:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1084,
                          "name": "check_allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1158,
                          "src": "982:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "982:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "504c4541534520434845434b20594f55522042414c414e4345204f5220414c4c4f57414e43452e",
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1001:41:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d56f5e20a62399d961eebab8cec2d2e0d80f81db90c4ab26886aaccdced6df45",
                          "typeString": "literal_string \"PLEASE CHECK YOUR BALANCE OR ALLOWANCE.\""
                        },
                        "value": "PLEASE CHECK YOUR BALANCE OR ALLOWANCE."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d56f5e20a62399d961eebab8cec2d2e0d80f81db90c4ab26886aaccdced6df45",
                          "typeString": "literal_string \"PLEASE CHECK YOUR BALANCE OR ALLOWANCE.\""
                        }
                      ],
                      "id": 1083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "974:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:69:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1088,
                  "nodeType": "ExpressionStatement",
                  "src": "974:69:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1092,
                                    "name": "ramps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1014,
                                    "src": "1068:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
                                      "typeString": "mapping(string memory => struct highway.RAMP storage ref)"
                                    }
                                  },
                                  "id": 1094,
                                  "indexExpression": {
                                    "id": 1093,
                                    "name": "name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1076,
                                    "src": "1074:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1068:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                                    "typeString": "struct highway.RAMP storage ref"
                                  }
                                },
                                "id": 1095,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 999,
                                "src": "1068:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 1091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1062:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 1090,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1062:5:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1062:23:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1062:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1095:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1062:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52414d5020444f45534e275420455849535453",
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1098:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c947fe6e32408035f7aa08fa6bda107361ba0679334e064d1d3da1f846c15d2",
                          "typeString": "literal_string \"RAMP DOESN'T EXISTS\""
                        },
                        "value": "RAMP DOESN'T EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c947fe6e32408035f7aa08fa6bda107361ba0679334e064d1d3da1f846c15d2",
                          "typeString": "literal_string \"RAMP DOESN'T EXISTS\""
                        }
                      ],
                      "id": 1089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1054:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1054:66:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1102,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:66:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1106,
                                    "name": "in_use",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1009,
                                    "src": "1145:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RAMP_$1004_storage_$",
                                      "typeString": "mapping(address => struct highway.RAMP storage ref)"
                                    }
                                  },
                                  "id": 1109,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1107,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1152:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1108,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1152:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1145:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                                    "typeString": "struct highway.RAMP storage ref"
                                  }
                                },
                                "id": 1110,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 999,
                                "src": "1145:23:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 1105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1139:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 1104,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1139:5:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1139:30:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1139:37:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1180:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1139:42:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414c5245414459205553494e4720412052414d502c2046494e49534820495420414e442050415920495420544f2055534520414e4f544845522e",
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1183:60:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3891c7f729786a7a8e966fb307051383dc40a735bce926cc46bbc261e66cae89",
                          "typeString": "literal_string \"ALREADY USING A RAMP, FINISH IT AND PAY IT TO USE ANOTHER.\""
                        },
                        "value": "ALREADY USING A RAMP, FINISH IT AND PAY IT TO USE ANOTHER."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3891c7f729786a7a8e966fb307051383dc40a735bce926cc46bbc261e66cae89",
                          "typeString": "literal_string \"ALREADY USING A RAMP, FINISH IT AND PAY IT TO USE ANOTHER.\""
                        }
                      ],
                      "id": 1103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1131:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1131:113:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "1131:113:8"
                },
                {
                  "expression": {
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1118,
                        "name": "in_use",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1009,
                        "src": "1255:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RAMP_$1004_storage_$",
                          "typeString": "mapping(address => struct highway.RAMP storage ref)"
                        }
                      },
                      "id": 1121,
                      "indexExpression": {
                        "expression": {
                          "id": 1119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1262:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1262:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1255:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                        "typeString": "struct highway.RAMP storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 1122,
                        "name": "ramps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "1276:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_RAMP_$1004_storage_$",
                          "typeString": "mapping(string memory => struct highway.RAMP storage ref)"
                        }
                      },
                      "id": 1124,
                      "indexExpression": {
                        "id": 1123,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "1282:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1276:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                        "typeString": "struct highway.RAMP storage ref"
                      }
                    },
                    "src": "1255:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                      "typeString": "struct highway.RAMP storage ref"
                    }
                  },
                  "id": 1126,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:32:8"
                }
              ]
            },
            "functionSelector": "663868aa",
            "id": 1128,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1079,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1078,
                  "name": "require_token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1210,
                  "src": "935:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "935:13:8"
              },
              {
                "id": 1081,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1080,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "949:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "949:13:8"
              }
            ],
            "name": "use_ramp",
            "nameLocation": "899:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1076,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "922:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "908:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1075,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "907:20:8"
            },
            "returnParameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "963:0:8"
            },
            "scope": 1211,
            "src": "890:405:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1236
            ],
            "body": {
              "id": 1157,
              "nodeType": "Block",
              "src": "1385:111:8",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1139,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1419:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1419:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1137,
                            "name": "TOKEN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "1403:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RPDToken_$1289",
                              "typeString": "contract RPDToken"
                            }
                          },
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 335,
                          "src": "1403:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1403:27:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1434:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "1403:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1146,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1456:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1456:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1150,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1476:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_highway_$1211",
                                  "typeString": "contract highway"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_highway_$1211",
                                  "typeString": "contract highway"
                                }
                              ],
                              "id": 1149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1468:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1148,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1468:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1468:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1144,
                            "name": "TOKEN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "1440:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RPDToken_$1289",
                              "typeString": "contract RPDToken"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 378,
                          "src": "1440:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 1152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1440:42:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1486:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "1440:48:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1403:85:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1136,
                  "id": 1156,
                  "nodeType": "Return",
                  "src": "1396:92:8"
                }
              ]
            },
            "functionSelector": "4ddd15d5",
            "id": 1158,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1131,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1130,
                  "name": "require_token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1210,
                  "src": "1342:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1342:13:8"
              },
              {
                "id": 1133,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1132,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "1356:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1356:13:8"
              }
            ],
            "name": "check_allowance",
            "nameLocation": "1312:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:2:8"
            },
            "returnParameters": {
              "id": 1136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "1378:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1134,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1377:6:8"
            },
            "scope": 1211,
            "src": "1303:193:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1240
            ],
            "body": {
              "id": 1192,
              "nodeType": "Block",
              "src": "1561:137:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1168,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1591:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1591:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1172,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1611:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_highway_$1211",
                              "typeString": "contract highway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_highway_$1211",
                              "typeString": "contract highway"
                            }
                          ],
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1603:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1170,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1603:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1603:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1174,
                            "name": "in_use",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1009,
                            "src": "1618:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RAMP_$1004_storage_$",
                              "typeString": "mapping(address => struct highway.RAMP storage ref)"
                            }
                          },
                          "id": 1177,
                          "indexExpression": {
                            "expression": {
                              "id": 1175,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1625:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1625:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1618:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                            "typeString": "struct highway.RAMP storage ref"
                          }
                        },
                        "id": 1178,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1003,
                        "src": "1618:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1165,
                        "name": "TOKEN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "1572:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RPDToken_$1289",
                          "typeString": "contract RPDToken"
                        }
                      },
                      "id": 1167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 436,
                      "src": "1572:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1572:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1180,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:71:8"
                },
                {
                  "expression": {
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1181,
                        "name": "in_use",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1009,
                        "src": "1654:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RAMP_$1004_storage_$",
                          "typeString": "mapping(address => struct highway.RAMP storage ref)"
                        }
                      },
                      "id": 1184,
                      "indexExpression": {
                        "expression": {
                          "id": 1182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1661:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1661:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1654:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                        "typeString": "struct highway.RAMP storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "",
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1680:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        {
                          "hexValue": "",
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1684:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        {
                          "hexValue": "30",
                          "id": 1188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1688:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1185,
                        "name": "RAMP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1004,
                        "src": "1675:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RAMP_$1004_storage_ptr_$",
                          "typeString": "type(struct highway.RAMP storage pointer)"
                        }
                      },
                      "id": 1189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1675:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RAMP_$1004_memory_ptr",
                        "typeString": "struct highway.RAMP memory"
                      }
                    },
                    "src": "1654:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RAMP_$1004_storage",
                      "typeString": "struct highway.RAMP storage ref"
                    }
                  },
                  "id": 1191,
                  "nodeType": "ExpressionStatement",
                  "src": "1654:36:8"
                }
              ]
            },
            "functionSelector": "cd5a3942",
            "id": 1193,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1161,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1160,
                  "name": "require_token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1210,
                  "src": "1533:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1533:13:8"
              },
              {
                "id": 1163,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1162,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "1547:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1547:13:8"
              }
            ],
            "name": "pay_ramp",
            "nameLocation": "1513:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1521:2:8"
            },
            "returnParameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1561:0:8"
            },
            "scope": 1211,
            "src": "1504:194:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1209,
              "nodeType": "Block",
              "src": "1731:104:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1198,
                              "name": "TOKEN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "1758:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RPDToken_$1289",
                                "typeString": "contract RPDToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RPDToken_$1289",
                                "typeString": "contract RPDToken"
                              }
                            ],
                            "id": 1197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1750:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1196,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1750:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1750:14:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1776:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1768:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1200,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1768:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1768:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1750:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c656173652073657420636f727265637420746f6b656e2061646472657373",
                        "id": 1205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1780:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c243c659333ad27407f563fc91c5fa7616c233b808cb99600dcda8fb37709b1a",
                          "typeString": "literal_string \"Please set correct token address\""
                        },
                        "value": "Please set correct token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c243c659333ad27407f563fc91c5fa7616c233b808cb99600dcda8fb37709b1a",
                          "typeString": "literal_string \"Please set correct token address\""
                        }
                      ],
                      "id": 1195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1742:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1742:73:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1207,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:73:8"
                },
                {
                  "id": 1208,
                  "nodeType": "PlaceholderStatement",
                  "src": "1826:1:8"
                }
              ]
            },
            "id": 1210,
            "name": "require_token",
            "nameLocation": "1715:13:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1728:2:8"
            },
            "src": "1706:129:8",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1212,
        "src": "236:1604:8",
        "usedErrors": []
      }
    ],
    "src": "36:1804:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-25T01:03:36.008Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "check_allowance()": {
        "returns": {
          "_0": "if the user has enough RPD TOKEN to use highway"
        }
      },
      "create_ramp(string,string,uint256)": {
        "params": {
          "location": "of the ramp which will be created",
          "name": "of the ramp which will be created",
          "price": "of the ramp which will be created"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "use_ramp(string)": {
        "params": {
          "name": "of the ramp to use"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "check_allowance()": {
        "notice": "Check allowance from user"
      },
      "create_ramp(string,string,uint256)": {
        "notice": "Calculate the cost of a determinate ramp"
      },
      "pay_ramp()": {
        "notice": "function to pay ramps after calculate cost and check if the driver has 10 rpd tokens."
      },
      "use_ramp(string)": {
        "notice": "Check allowance from user"
      }
    },
    "version": 1
  }
}